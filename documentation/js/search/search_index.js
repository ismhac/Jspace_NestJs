var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.232,1,2.827]],["body/controllers/AppController.html",[0,2.088,1,4.79,2,1.719,3,0.179,4,0.179,5,0.113,6,4.779,7,0.337,8,0.015,9,5.506,10,2.738,11,4.779,12,4.301,13,0.89,14,4.475,15,4.779,16,4.475,17,3.217,18,3.976,19,5.506,20,0.179,21,0.254,22,2.279,23,3.258,24,2.738,25,0.012,26,0.012]],["title/modules/AppModule.html",[27,0.945,28,2.827]],["body/modules/AppModule.html",[1,4.087,2,1.53,3,0.112,4,0.112,5,0.071,7,0.36,8,0.015,13,0.556,14,4.246,15,2.985,16,3.864,17,2.009,20,0.112,21,0.159,25,0.009,26,0.009,27,1.366,28,5.746,29,1.487,30,1.487,31,1.629,32,1.629,33,1.487,34,2.704,35,1.629,36,2.985,37,2.985,38,2.985,39,4.672,40,4.672,41,4.541,42,4.672,43,4.672,44,4.672,45,4.672,46,4.369,47,4.369,48,2.321,49,1.629,50,1.629,51,3.438,52,2.838,53,3.438,54,1.898,55,1.033,56,4.253,57,3.438,58,3.438,59,3.438,60,1.799,61,1.256,62,1.799,63,0.995,64,3.438,65,3.438,66,3.438,67,3.438,68,3.438,69,3.438,70,3.438,71,3.438,72,2.985,73,1.423,74,3.438,75,3.438,76,3.438,77,4.899,78,3.438,79,0.922,80,2.985,81,3.438,82,3.438,83,1.309,84,3.438,85,3.438,86,2.985,87,2.284]],["title/injectables/AppService.html",[14,2.452,88,0.75]],["body/injectables/AppService.html",[3,0.185,4,0.185,5,0.117,7,0.256,8,0.015,13,0.922,14,4.243,20,0.185,21,0.263,25,0.012,26,0.012,79,1.529,88,1.298,89,2.083,90,4.949,91,0.644,92,1.975,93,7.581,94,0.847,95,5.701,96,1.649,97,1.059,98,4.453,99,5.701,100,5.701,101,5.701]],["title/controllers/AuthController.html",[0,1.232,102,2.827]],["body/controllers/AuthController.html",[0,0.947,2,0.947,3,0.098,4,0.098,5,0.062,7,0.319,8,0.015,10,1.509,11,2.633,12,5.427,13,0.491,18,2.933,20,0.098,21,0.14,22,1.256,23,2.023,25,0.008,26,0.008,73,2.2,79,1.755,83,2.232,87,2.015,91,0.343,92,1.294,94,0.93,96,1.809,102,3.204,103,2.633,104,1.587,105,3.034,106,4.474,107,5.315,108,5.315,109,4.474,110,4.474,111,3.034,112,2.376,113,1.677,114,3.034,115,2.238,116,4.474,117,4.582,118,3.034,119,1.88,120,0.778,121,0.814,122,1.809,123,1.437,124,3.034,125,4.905,126,3.034,127,2.614,128,3.034,129,5.092,130,3.034,131,3.034,132,3.034,133,3.034,134,3.034,135,4.613,136,4.613,137,3.034,138,3.034,139,3.424,140,3.034,141,1.57,142,3.034,143,1.674,144,4.48,145,2.37,146,3.655,147,1.509,148,1.312,149,2.173,150,3.034,151,4.474,152,3.034,153,1.885,154,2.015,155,1.885,156,1.312,157,2.469,158,2.633,159,3.034,160,2.633,161,3.034,162,3.034,163,5.866,164,3.034,165,4.474,166,5.315,167,4.474,168,4.151,169,1.48,170,3.204,171,3.034,172,4.474,173,3.034,174,3.034,175,3.034,176,2.633,177,1.437,178,3.034,179,3.034,180,2.37,181,3.034,182,3.034,183,3.034,184,3.034,185,3.034,186,3.034,187,3.034,188,3.034,189,3.034,190,3.034]],["title/modules/AuthModule.html",[27,0.945,39,2.622]],["body/modules/AuthModule.html",[2,1.736,3,0.134,4,0.134,5,0.085,7,0.349,8,0.015,13,0.668,16,4.18,17,2.412,18,4.318,20,0.134,21,0.19,25,0.01,26,0.01,27,1.506,29,1.786,30,1.786,31,1.957,32,1.957,33,1.786,34,2.98,35,2.98,39,5.284,46,4.495,47,4.495,48,2.635,49,1.957,50,1.957,52,3.128,56,4.828,72,3.584,73,1.709,80,3.584,102,4.504,145,3.225,191,3.584,192,4.129,193,3.584,194,3.584,195,4.807,196,4.807,197,4.129,198,4.129,199,5.562,200,2.565,201,4.129,202,4.129,203,3.225,204,4.129,205,4.344,206,4.129,207,4.129,208,4.129,209,3.584,210,4.129,211,4.129,212,3.584,213,4.129,214,3.584]],["title/injectables/AuthService.html",[18,2.178,88,0.75]],["body/injectables/AuthService.html",[3,0.076,4,0.076,5,0.048,7,0.296,8,0.015,13,0.376,16,3.835,17,1.36,18,2.018,20,0.076,21,0.107,22,1.514,23,2.314,25,0.007,26,0.007,73,2.839,79,1.655,83,1.719,88,0.695,89,0.851,91,0.263,92,1.058,94,0.917,96,1.306,97,1.064,112,1.952,115,2.045,119,1.537,120,0.867,121,0.636,122,1.48,123,2.424,125,4.261,135,5.123,136,5.358,139,2.677,141,1.284,153,1.446,154,1.547,155,1.446,156,1.007,157,2.824,158,2.021,160,3.92,169,1.993,170,3.664,176,3.174,177,3.029,203,1.819,205,2.856,209,3.174,212,2.021,214,2.021,215,2.021,216,0.98,217,4.516,218,4.516,219,4.516,220,5.56,221,3.174,222,3.657,223,2.328,224,3.229,225,6.173,226,2.328,227,3.657,228,2.328,229,3.174,230,2.328,231,3.657,232,4.516,233,2.328,234,1.819,235,3.174,236,3,237,2.638,238,2.328,239,2.328,240,2.328,241,1.446,242,1.819,243,2.328,244,1.36,245,3.657,246,2.328,247,2.328,248,2.328,249,3.657,250,2.328,251,1.947,252,1.946,253,1.773,254,2.255,255,3.92,256,3.657,257,3.657,258,3.657,259,6.575,260,3.657,261,3.657,262,2.328,263,1.819,264,2.328,265,2.856,266,3.657,267,3.657,268,3.174,269,3.657,270,3.657,271,3.657,272,3.657,273,4.516,274,3.657,275,4.516,276,1.007,277,3.657,278,2.018,279,3.657,280,3.174,281,2.328,282,2.021,283,1.819,284,2.328,285,2.021,286,1.158,287,2.021,288,2.328,289,2.328,290,1.819,291,2.328,292,2.328,293,2.328,294,2.328,295,1.667,296,2.328,297,2.328,298,2.328,299,3.657,300,2.328,301,2.328,302,3.657,303,2.328,304,2.492,305,2.021]],["title/controllers/CompaniesController.html",[0,1.232,306,2.827]],["body/controllers/CompaniesController.html",[0,1.033,2,1.033,3,0.107,4,0.107,5,0.068,7,0.303,8,0.015,10,2.37,13,0.535,20,0.107,21,0.153,24,1.646,25,0.009,26,0.009,61,1.209,79,1.737,91,0.374,92,1.378,94,0.963,96,1.874,97,1.22,104,1.731,112,2.583,113,1.737,115,2.243,119,1.946,120,0.839,121,0.805,122,1.874,127,4.299,141,1.673,143,2.631,146,3.264,147,1.646,148,1.431,156,1.431,169,0.921,251,2.126,306,3.414,307,2.872,308,4.849,309,1.378,310,2.312,311,1.973,312,1.973,313,2.872,314,4.191,315,2.37,316,2.401,317,3.309,318,1.497,319,2.764,320,2.764,321,2.872,322,3.309,323,2.527,324,1.37,325,2.585,326,3.309,327,2.677,328,1.37,329,2.585,330,3.309,331,1.497,332,4.728,333,2.585,334,3.309,335,1.826,336,1.933,337,2.061,338,3.47,339,2.872,340,1.37,341,3.723,342,1.37,343,3.309,344,1.568,345,1.731,346,1.497,347,2.37,348,2.198,349,3.309,350,3.414,351,2.056,352,2.585,353,2.056,354,3.309,355,1.933,356,1.933,357,3.309,358,2.056,359,2.37,360,2.585,361,3.309,362,1.933,363,2.585,364,2.198,365,3.309]],["title/modules/CompaniesModule.html",[27,0.945,40,2.622]],["body/modules/CompaniesModule.html",[2,1.992,3,0.165,4,0.165,5,0.105,7,0.338,8,0.015,13,0.825,20,0.165,21,0.235,25,0.011,26,0.011,27,1.667,29,2.205,30,2.205,31,2.416,32,2.416,33,2.205,34,3.299,35,3.023,40,5.09,48,3.023,49,2.416,50,2.416,52,2.536,54,2.814,55,1.532,120,0.634,306,4.986,316,1.721,338,4.828,339,4.426,366,4.426,367,4.426,368,5.099,369,5.099,370,4.569,371,4.426,372,2.979,373,4.426,374,2.205]],["title/injectables/CompaniesService.html",[88,0.75,338,2.452]],["body/injectables/CompaniesService.html",[3,0.092,4,0.092,5,0.059,7,0.319,8,0.015,13,0.461,20,0.092,21,0.131,22,1.768,23,1.289,25,0.008,26,0.008,55,0.856,60,1.491,61,2.079,62,1.491,63,1.235,73,3.024,79,1.634,88,0.812,89,1.041,91,0.322,92,1.235,94,0.951,96,1.762,97,1.133,98,2.226,112,2.494,115,2.055,119,1.922,120,0.795,121,0.795,122,1.85,123,2.696,141,1.499,148,1.232,156,1.232,169,1.584,177,2.887,241,1.771,244,2.993,251,1.625,252,1.85,253,1.539,278,2.357,309,1.235,310,1.768,311,1.768,312,1.768,313,3.707,314,3.974,316,1.728,318,1.932,319,3,320,2.317,323,2.317,324,1.768,327,2.818,328,1.768,331,1.932,332,4.532,337,1.232,338,2.653,340,1.18,341,3.336,342,1.18,371,2.474,375,2.474,376,2.85,377,3.324,378,2.85,379,4.271,380,2.85,381,2.435,382,2.85,383,2.85,384,2.85,385,2.85,386,1.665,387,2.226,388,2.474,389,1.771,390,1.665,391,1.665,392,4.938,393,2.85,394,2.85,395,1.232,396,3.182,397,1.771,398,1.771,399,1.771,400,1.771,401,1.771,402,1.771,403,1.771,404,1.665,405,2.653,406,1.665,407,2.653,408,2.85,409,2.653,410,1.771,411,2.653,412,2.85,413,1.771,414,1.771,415,1.771,416,1.771,417,1.771,418,1.771,419,1.771,420,1.771,421,1.771,422,1.771,423,2.653,424,3.336,425,2.653,426,2.85,427,4.271,428,1.232,429,1.289,430,2.85]],["title/classes/Company.html",[21,0.182,316,1.332]],["body/classes/Company.html",[3,0.122,4,0.122,5,0.077,7,0.234,8,0.015,20,0.194,21,0.173,25,0.009,26,0.009,55,1.127,63,1.507,83,1.428,91,0.424,94,1.135,97,1.184,113,2.047,120,0.744,121,0.989,169,1.045,216,1.397,252,1.731,253,1.798,286,2.976,316,1.758,345,3.131,346,2.707,370,2.687,374,2.253,387,2.931,395,2.588,428,2.588,429,2.707,431,0.969,432,2.687,433,3.717,434,3.496,435,3.976,436,3.496,437,4.975,438,3.752,439,3.678,440,3.752,441,3.496,442,3.717,443,3.496,444,3.752,445,3.752,446,3.752,447,3.752,448,2.726,449,3.752,450,3.752,451,3.752,452,3.752,453,3.752,454,2.331,455,3.044,456,2.331,457,2.477,458,3.257]],["title/classes/Company-1.html",[21,0.152,316,1.111,404,1.924]],["body/classes/Company-1.html",[3,0.119,4,0.119,5,0.075,7,0.265,8,0.015,20,0.119,21,0.295,25,0.009,26,0.009,63,1.479,83,1.39,91,0.413,94,0.877,97,1.166,113,1.582,120,0.889,121,0.836,141,1.795,216,1.371,237,2.987,252,1.945,316,2.269,346,2.313,381,1.946,431,0.943,435,4.468,439,3.82,448,2.675,457,2.117,459,4.991,460,2.616,461,2.934,462,3.556,463,3.653,464,5.547,465,3.653,466,3.653,467,5.12,468,2.269,469,3.994,470,3.994,471,5.12,472,3.685,473,3.397,474,3.397,475,4.438,476,3.397,477,1.652,478,3.283,479,2.134,480,4.225,481,2.853,482,3.994,483,3.171,484,3.397,485,3.662,486,3.662,487,3.662,488,4.438,489,4.438,490,2.616,491,4.438,492,2.616,493,4.438,494,2.016]],["title/classes/Company-2.html",[21,0.152,290,2.572,316,1.111]],["body/classes/Company-2.html",[3,0.129,4,0.129,5,0.082,7,0.277,8,0.015,20,0.176,21,0.32,25,0.01,26,0.01,63,1.568,91,0.449,94,0.806,97,1.206,113,1.454,120,0.91,121,0.824,139,2.08,153,3.832,216,1.454,252,1.784,253,1.991,254,2.254,316,2.339,345,3.466,381,2.063,431,1.027,443,1.978,457,2.554,462,3.541,468,2.47,472,3.795,473,3.602,474,3.602,476,3.602,477,1.798,478,3.26,495,2.642,496,3.976,497,3.976,498,4.418,499,3.368,500,2.195,501,2.848,502,2.195,503,3.657,504,4.116,505,4.116,506,3.106]],["title/classes/CreateCompanyDto.html",[21,0.182,314,2.452]],["body/classes/CreateCompanyDto.html",[3,0.154,4,0.154,5,0.097,7,0.213,8,0.015,20,0.154,21,0.281,25,0.011,26,0.011,91,0.536,94,1.056,97,1.202,113,1.905,120,0.914,121,0.883,216,1.635,314,3.788,345,3.845,346,3.324,431,1.226,435,4.883,443,2.361,461,3.534,462,3.504,472,3.483,477,2.148,478,2.942,498,3.401,500,2.621,501,3.401,507,6.38,508,3.709,509,4.748,510,4.748,511,4.748,512,4.748]],["title/classes/CreateFileDto.html",[21,0.182,513,2.452]],["body/classes/CreateFileDto.html",[3,0.201,4,0.201,5,0.127,8,0.014,20,0.201,21,0.286,25,0.013,26,0.013,431,1.599,513,4.455,514,5.377,515,4.838]],["title/classes/CreateJobDto.html",[21,0.182,479,2.306]],["body/classes/CreateJobDto.html",[3,0.096,4,0.096,5,0.061,7,0.236,8,0.015,20,0.096,21,0.268,25,0.008,26,0.008,63,1.275,83,1.677,91,0.336,94,1.082,97,1.166,113,1.953,120,0.836,121,0.926,141,1.547,216,1.182,237,2.575,252,1.275,316,2.269,346,2.806,381,2.211,431,0.768,435,2.928,439,3.991,448,3.039,457,1.231,459,5.758,460,2.129,461,3.57,462,3.508,464,3.826,467,4.559,468,1.847,469,3.443,470,3.443,471,4.559,472,3.561,473,2.928,474,2.928,475,3.826,476,2.928,477,1.345,478,3.21,479,2.575,480,4.817,481,2.322,482,4.103,483,3.826,484,4.121,485,4.443,486,4.443,487,4.443,488,5.042,489,3.826,490,3.762,491,5.042,492,3.762,493,5.042,494,2.899,516,2.581,517,2.973,518,2.973,519,4.407,520,4.407,521,2.973,522,2.581,523,2.973,524,2.973,525,2.973,526,2.973,527,2.973,528,2.973,529,2.581,530,2.973,531,2.973,532,2.973]],["title/classes/CreatePermissionDto.html",[21,0.182,533,2.452]],["body/classes/CreatePermissionDto.html",[3,0.156,4,0.156,5,0.099,7,0.216,8,0.015,20,0.156,21,0.284,25,0.011,26,0.011,27,1.766,91,0.543,94,1.061,97,1.205,113,1.914,120,0.917,121,0.887,216,1.648,431,1.241,461,3.551,462,3.513,472,3.496,477,2.174,478,2.955,533,3.818,534,6.404,535,3.755,536,4.311,537,4.583,538,4.807,539,4.807,540,4.807,541,4.807]],["title/classes/CreateResumeDto.html",[21,0.182,542,2.306]],["body/classes/CreateResumeDto.html",[3,0.13,4,0.13,5,0.082,7,0.245,8,0.015,20,0.177,21,0.286,25,0.01,26,0.01,63,1.577,91,0.453,94,1.066,97,1.138,113,1.923,121,0.892,216,1.462,253,2.089,431,1.035,457,3.091,461,3.567,462,3.583,472,3.628,477,1.813,478,3.199,499,3.848,542,3.185,543,5.732,544,2.871,545,5.348,546,5.348,547,4.319,548,5.256,549,4.98,550,4.009,551,4.009,552,4.009,553,4.009,554,4.009,555,4.009,556,2.491,557,4.259]],["title/classes/CreateRoleDto.html",[21,0.182,558,2.452]],["body/classes/CreateRoleDto.html",[3,0.144,4,0.144,5,0.091,7,0.262,8,0.015,20,0.144,21,0.269,25,0.011,26,0.011,63,1.689,83,2.222,91,0.502,94,1.03,97,1.074,113,1.858,120,0.895,121,0.861,216,1.566,276,2.525,304,4.156,346,3.255,431,1.147,448,3.625,457,2.417,461,3.446,462,3.341,469,4.561,470,4.561,472,3.41,477,2.009,478,3.163,481,3.47,482,5.095,494,4.156,499,3.627,522,3.856,529,3.856,557,4.561,558,3.627,559,6.247,560,3.47,561,4.442,562,4.442,563,4.442,564,4.442,565,4.442]],["title/classes/CreateUserCvDto.html",[21,0.182,556,2.452]],["body/classes/CreateUserCvDto.html",[3,0.14,4,0.14,5,0.089,7,0.258,8,0.015,20,0.186,21,0.297,25,0.01,26,0.01,63,1.659,91,0.488,94,0.957,97,1.106,113,1.726,121,0.8,216,1.538,253,1.723,431,1.116,457,3.096,461,3.201,462,3.511,472,3.679,477,1.955,478,3.24,499,3.998,542,2.526,543,5.354,544,3.096,545,5.506,546,5.506,547,3.563,548,5.357,549,4.108,556,3.563,557,5.354,566,4.978,567,4.323,568,4.323,569,4.323]],["title/classes/CreateUserDto.html",[21,0.182,502,2.178]],["body/classes/CreateUserDto.html",[3,0.11,4,0.11,5,0.07,7,0.255,8,0.015,20,0.158,21,0.302,25,0.009,26,0.009,63,1.406,91,0.384,94,1.066,97,1.207,113,1.922,120,0.891,121,0.92,139,1.78,153,4.533,216,1.304,252,0.984,253,2.107,254,2.562,316,2.366,345,3.668,381,2.159,431,0.878,443,1.692,457,2.349,461,3.387,462,3.57,468,2.113,472,3.689,473,3.23,474,3.23,476,3.23,477,1.539,478,3.184,495,2.26,498,4.063,499,3.02,500,1.878,501,2.437,502,2.683,503,3.869,504,4.355,505,4.355,506,3.798,516,2.953,566,2.953,570,3.402,571,3.402,572,3.402,573,2.953,574,3.402,575,3.402,576,3.402,577,3.402,578,3.402]],["title/controllers/DatabasesController.html",[0,1.232,579,2.827]],["body/controllers/DatabasesController.html",[0,1.828,2,1.828,3,0.19,4,0.19,5,0.12,7,0.312,8,0.015,13,0.947,20,0.19,21,0.27,24,2.913,25,0.012,26,0.012,104,3.064,344,2.775,579,4.971,580,5.084,581,5.856,582,4.595,583,5.084,584,5.856]],["title/modules/DatabasesModule.html",[27,0.945,41,2.622]],["body/modules/DatabasesModule.html",[2,1.862,3,0.149,4,0.149,5,0.094,7,0.35,8,0.015,13,0.742,20,0.149,21,0.212,25,0.011,26,0.011,27,1.587,29,1.985,30,1.985,31,2.175,32,2.175,33,1.985,34,3.14,35,2.175,41,5.112,48,2.827,49,2.175,50,2.175,52,2.283,54,2.533,55,1.379,115,1.328,120,0.824,224,3.9,242,3.586,254,1.677,276,1.985,372,2.682,374,2.866,579,4.746,582,4.631,583,3.985,585,3.985,586,3.985,587,4.59,588,4.59,589,5.178,590,3.963,591,3.963,592,3.586,593,3.706,594,3.05,595,3.985,596,3.586,597,3.288]],["title/injectables/DatabasesService.html",[88,0.75,582,2.452]],["body/injectables/DatabasesService.html",[3,0.098,4,0.098,5,0.062,7,0.318,8,0.015,13,0.487,16,4.197,17,1.761,20,0.098,21,0.139,22,1.843,23,3.137,24,2.634,25,0.008,26,0.008,55,0.906,60,1.577,61,1.101,62,1.577,63,0.872,73,2.192,83,1.695,88,0.846,89,1.101,91,0.34,92,1.288,94,0.787,96,0.872,115,1.288,119,0.906,120,0.862,121,0.375,122,0.872,141,1.563,169,1.881,177,3.355,180,2.355,216,1.194,224,3.06,236,2.003,237,1.761,242,2.355,253,1.591,254,2.386,265,2.355,268,2.617,276,2.29,304,3.444,309,1.954,345,2.77,346,2.014,377,4.208,386,1.761,494,2.458,500,2.458,503,2.923,504,3.289,505,3.289,582,2.766,589,2.617,592,2.355,594,2.003,598,2.617,599,5.848,600,6.53,601,2.617,602,4.596,603,4.596,604,5.295,605,4.453,606,3.865,607,3.015,608,4.453,609,2.159,610,2.003,611,2.159,612,3.792,613,2.355,614,3.792,615,5.295,616,2.159,617,3.015,618,2.617,619,2.355,620,3.015,621,3.015,622,3.015,623,5.295,624,3.015,625,5.295,626,3.015,627,5.295,628,3.015,629,5.101,630,3.015,631,5.295,632,3.015,633,3.015,634,2.355,635,3.015,636,3.015,637,2.617,638,3.015,639,3.865,640,3.015,641,3.015,642,2.617,643,5.295,644,3.015,645,5.295,646,5.295,647,4.453,648,3.015,649,3.015,650,3.015,651,3.015,652,3.015,653,3.015,654,3.015,655,2.617,656,3.015,657,3.015,658,2.159,659,3.015]],["title/classes/File.html",[5,0.081,21,0.182]],["body/classes/File.html",[3,0.202,4,0.202,5,0.156,8,0.014,20,0.202,21,0.287,25,0.013,26,0.013,431,1.604,660,5.394]],["title/controllers/FilesController.html",[0,1.232,661,2.827]],["body/controllers/FilesController.html",[0,1.151,2,1.151,3,0.12,4,0.12,5,0.139,7,0.314,8,0.015,10,1.834,13,0.596,20,0.12,21,0.17,24,1.834,25,0.009,26,0.009,61,1.347,79,1.81,91,0.417,92,1.489,94,1.003,96,1.952,97,1.153,104,1.929,113,1.81,119,1.928,120,0.798,121,0.798,122,1.856,127,2.155,141,1.295,143,2.841,144,2.641,146,3.007,147,1.834,148,1.595,155,2.291,251,1.959,310,2.656,311,2.131,312,2.131,324,1.527,327,2.774,328,1.527,331,1.668,335,2.035,336,2.155,340,1.527,342,1.527,344,1.747,355,3.007,356,2.155,358,3.197,362,3.007,364,2.45,513,2.291,661,3.686,662,3.201,663,2.881,664,5.147,665,3.688,666,3.688,667,3.688,668,4.862,669,3.688,670,3.688,671,5.929,672,3.688,673,3.688,674,3.688,675,4.468,676,3.688,677,3.688,678,5.147,679,3.688,680,3.683,681,3.201,682,4.02,683,3.688,684,2.641,685,3.688,686,3.688,687,3.688,688,3.688,689,3.688,690,3.688,691,3.688,692,3.688,693,3.688,694,3.688,695,5.147,696,3.688,697,3.688,698,3.688,699,3.688,700,3.688,701,3.688,702,2.641,703,3.688,704,3.688]],["title/modules/FilesModule.html",[27,0.945,42,2.622]],["body/modules/FilesModule.html",[2,2.001,3,0.167,4,0.167,5,0.106,7,0.338,8,0.015,13,0.831,20,0.167,21,0.237,25,0.012,26,0.012,27,1.673,29,2.222,30,2.222,31,2.435,32,2.435,33,2.222,34,3.31,35,2.435,42,5.1,48,3.038,49,2.435,50,2.435,52,2.556,86,4.461,155,3.193,661,5.004,680,4.769,681,4.461,684,3.681,705,4.461,706,4.461,707,5.14,708,5.14,709,5.14,710,4.591,711,5.14,712,5.14]],["title/injectables/FilesService.html",[88,0.75,680,2.452]],["body/injectables/FilesService.html",[3,0.138,4,0.138,5,0.146,7,0.287,8,0.015,13,0.688,20,0.138,21,0.196,25,0.01,26,0.01,79,1.903,88,1.079,89,1.555,91,0.481,92,1.642,94,1.055,96,2.155,97,1.101,119,2.047,120,0.847,121,0.847,122,1.97,141,1.494,251,2.16,309,1.642,310,2.82,311,2.35,312,2.35,324,2.35,327,2.896,328,2.35,331,2.567,340,1.762,342,1.762,381,2.917,513,4.408,663,3.325,668,4.95,680,3.526,682,4.434,713,3.695,714,5.676,715,4.257,716,4.257,717,4.257,718,4.257,719,4.257,720,7.096,721,4.257,722,4.257,723,4.257]],["title/interfaces/IUser.html",[112,1.386,724,2.452]],["body/interfaces/IUser.html",[3,0.165,4,0.165,5,0.104,8,0.015,20,0.165,25,0.011,26,0.011,27,1.217,91,0.574,97,1.264,112,2.235,120,0.952,121,0.985,122,1.842,216,1.708,252,2.214,253,2.19,254,2.663,304,4.022,441,4.258,536,2.971,724,3.159,725,3.972,726,4.415]],["title/classes/Job.html",[21,0.182,727,2.178]],["body/classes/Job.html",[3,0.101,4,0.101,5,0.064,7,0.205,8,0.015,20,0.175,21,0.144,25,0.008,26,0.008,55,0.936,63,1.32,83,1.186,91,0.352,94,1.155,97,1.184,113,2.083,120,0.739,121,0.995,169,0.868,216,1.224,252,1.719,253,1.622,286,2.685,316,1.822,346,2.442,374,1.973,381,2.262,395,2.335,428,2.335,429,2.442,431,0.805,433,3.354,434,3.154,435,2.071,436,3.154,437,5.027,439,3.798,441,3.472,442,3.692,443,3.482,448,3.109,454,1.936,455,2.666,456,1.936,457,2.46,480,3.867,484,3.587,485,3.867,486,3.867,487,3.867,490,3.867,492,3.867,494,2.98,727,2.519,728,2.232,729,3.117,730,3.117,731,3.117,732,3.117,733,3.117,734,3.117,735,3.117,736,3.117,737,3.117,738,3.117,739,3.117,740,3.117,741,3.117,742,3.117,743,3.117,744,3.117,745,3.117,746,3.117,747,1.41,748,2.435,749,2.232,750,2.705]],["title/controllers/JobsController.html",[0,1.232,751,2.827]],["body/controllers/JobsController.html",[0,1.037,2,1.037,3,0.108,4,0.108,5,0.068,7,0.304,8,0.015,10,2.376,13,0.537,20,0.108,21,0.153,24,1.651,25,0.009,26,0.009,61,1.213,79,1.739,91,0.375,92,1.382,94,0.964,96,1.876,97,1.22,104,1.737,112,2.585,113,1.739,115,2.244,119,1.949,120,0.806,121,0.806,122,1.876,127,4.303,141,1.677,143,2.637,144,2.378,146,3.27,147,1.651,148,1.436,156,1.436,169,0.925,251,2.13,309,1.382,310,2.317,311,1.978,312,2.317,315,2.378,318,1.502,319,2.769,320,2.769,321,2.882,323,2.531,324,1.374,325,2.594,327,2.68,328,1.374,329,2.594,331,1.502,333,2.594,335,1.833,336,1.94,337,2.066,340,1.374,342,1.374,344,1.573,347,2.378,348,2.206,350,3.422,351,2.063,352,2.594,353,2.063,355,1.94,356,1.94,358,2.063,359,2.378,360,3.732,362,1.94,363,2.594,479,3.946,727,3.931,751,3.422,752,2.882,753,4.858,754,2.882,755,3.32,756,3.32,757,3.32,758,3.32,759,4.732,760,3.32,761,3.477,762,2.882,763,3.732,764,3.32,765,3.32,766,3.32,767,3.32,768,3.32,769,3.32]],["title/modules/JobsModule.html",[27,0.945,43,2.622]],["body/modules/JobsModule.html",[2,2.001,3,0.167,4,0.167,5,0.106,7,0.338,8,0.015,13,0.831,20,0.167,21,0.237,25,0.012,26,0.012,27,1.673,29,2.222,30,2.222,31,2.435,32,2.435,33,2.222,34,3.31,35,2.435,43,5.1,48,3.038,49,2.435,50,2.435,52,2.556,54,2.837,55,1.544,120,0.639,372,3.003,374,2.222,727,2.837,749,4.591,751,5.004,761,4.769,762,4.461,770,4.461,771,4.461,772,5.14,773,5.14,774,4.461,775,4.461]],["title/injectables/JobsService.html",[88,0.75,761,2.452]],["body/injectables/JobsService.html",[3,0.092,4,0.092,5,0.058,7,0.313,8,0.015,13,0.457,20,0.092,21,0.13,22,1.756,23,1.278,25,0.008,26,0.008,55,0.849,60,1.478,61,1.862,62,1.478,63,1.474,73,3.019,79,1.773,88,0.806,89,1.032,91,0.319,92,1.227,94,0.948,96,1.756,97,1.131,112,2.488,115,2.013,119,1.916,120,0.846,121,0.792,122,1.844,123,2.684,156,1.222,169,1.69,177,2.876,244,2.977,251,1.615,252,1.844,253,1.531,309,1.227,310,1.756,311,1.756,312,1.756,316,1.432,318,1.919,319,2.991,320,2.304,323,2.304,324,1.756,327,2.529,328,1.756,331,1.919,337,1.222,340,1.169,342,1.169,346,1.919,377,3.309,381,2.427,386,1.651,389,1.755,390,1.651,391,1.651,395,1.222,396,3.165,397,1.755,398,1.755,399,1.755,400,1.755,401,1.755,402,1.755,403,1.755,404,1.651,405,2.636,406,1.651,407,2.636,409,2.636,410,1.755,411,2.636,413,1.755,414,1.755,415,1.755,416,1.755,417,1.755,418,1.755,419,1.755,420,1.755,421,1.755,422,1.755,423,2.636,425,2.636,428,1.222,429,1.278,479,3.725,480,3.039,484,2.819,485,3.039,486,3.039,487,3.039,490,3.039,492,3.039,494,2.342,727,2.812,748,2.207,754,3.683,759,4.52,761,2.636,763,3.314,774,2.452,776,2.452,777,2.825,778,2.825,779,4.243,780,2.825,781,2.825,782,2.825,783,2.825,784,2.825,785,2.825,786,2.825,787,2.825,788,2.825,789,2.825,790,4.243,791,2.825]],["title/injectables/JwtAuthGuard.html",[87,2.622,88,0.75]],["body/injectables/JwtAuthGuard.html",[3,0.233,4,0.143,5,0.091,7,0.311,8,0.015,13,0.713,20,0.143,21,0.204,22,1.826,25,0.01,26,0.01,79,1.743,83,1.679,87,3.862,88,1.105,89,1.612,91,0.498,92,1.681,94,0.966,96,1.681,115,2.077,119,1.953,120,0.808,121,0.723,122,1.88,141,1.549,148,1.908,169,1.229,200,2.741,276,1.908,278,3.208,344,2.091,792,5.998,793,3.446,794,5.813,795,5.813,796,3.83,797,5.76,798,4.412,799,5.813,800,4.949,801,4.412,802,3.446,803,5.813,804,4.412,805,6.91,806,3.83,807,3.16,808,3.83,809,3.446,810,2.091,811,4.412,812,3.446,813,5.046,814,4.412,815,3.446,816,4.412,817,4.412,818,4.412,819,4.412,820,4.412,821,4.412,822,4.412]],["title/injectables/JwtStrategy.html",[88,0.75,195,2.622]],["body/injectables/JwtStrategy.html",[3,0.152,4,0.152,5,0.096,7,0.329,8,0.015,13,0.757,16,4.654,17,2.734,20,0.152,21,0.216,22,2.5,23,2.116,25,0.011,26,0.011,73,2.769,79,1.255,88,1.148,89,1.71,91,0.528,92,1.747,94,0.898,96,1.353,112,2.481,119,1.815,120,0.878,121,0.751,122,1.747,123,2.217,156,2.023,168,3.655,169,1.303,195,4.013,200,2.907,252,1.747,253,1.815,254,2.207,255,5.243,295,3.351,810,2.217,812,3.655,823,4.062,824,5.243,825,4.679,826,4.679,827,6.04,828,4.679,829,4.679,830,4.062,831,4.062,832,4.062,833,4.062,834,4.679,835,4.679,836,4.679,837,4.062,838,4.679,839,4.679]],["title/injectables/LocalAuthGuard.html",[88,0.75,149,2.827]],["body/injectables/LocalAuthGuard.html",[3,0.192,4,0.192,5,0.122,7,0.314,8,0.015,13,0.959,20,0.192,21,0.273,25,0.013,26,0.013,88,1.329,89,2.166,149,5.007,200,3.683,793,4.631,808,5.146,810,2.809,840,5.146,841,5.928]],["title/injectables/LocalStrategy.html",[88,0.75,196,2.622]],["body/injectables/LocalStrategy.html",[3,0.154,4,0.154,5,0.097,7,0.319,8,0.015,13,0.766,18,4.149,20,0.154,21,0.219,22,2.52,23,2.142,25,0.011,26,0.011,73,2.785,79,1.27,88,1.157,89,1.731,91,0.535,92,1.761,94,0.905,96,1.37,97,1.166,115,1.946,119,1.829,120,0.757,121,0.757,122,1.761,141,1.663,145,3.7,168,3.7,169,1.319,177,2.244,196,4.044,200,2.942,234,3.7,235,5.284,278,2.614,295,3.392,503,4.054,806,4.112,810,2.244,812,3.7,824,5.284,830,4.112,832,4.112,833,4.112,842,4.112,843,4.737,844,4.737,845,6.087,846,4.737,847,4.112,848,4.737,849,4.737,850,4.737]],["title/injectables/MulterConfigService.html",[88,0.75,710,2.827]],["body/injectables/MulterConfigService.html",[3,0.125,4,0.125,5,0.134,7,0.308,8,0.015,13,0.621,20,0.125,21,0.177,25,0.01,26,0.01,79,1.625,83,1.462,88,1.006,89,1.404,91,0.434,92,1.531,94,0.901,96,1.531,97,0.94,119,1.154,120,0.753,121,0.478,122,1.111,127,2.245,129,4.596,155,2.387,169,1.07,216,1.42,236,4.025,237,2.245,276,1.661,282,5.946,309,1.111,484,2.552,616,2.752,658,3.792,675,3.335,684,2.752,710,3.792,851,3.335,852,6.059,853,6.53,854,5.295,855,3.842,856,6.059,857,5.295,858,3.842,859,3.842,860,3.842,861,3.842,862,5.295,863,5.295,864,5.295,865,3.842,866,3.792,867,3.335,868,3.842,869,3.842,870,3.842,871,3.842,872,3.001,873,4.596,874,3.842,875,3.842,876,5.295,877,3.842,878,3.842,879,3.842,880,3.842,881,6.059,882,3.842,883,3.842,884,3.842,885,3.842,886,3.842,887,3.842,888,3.842,889,3.842,890,3.842,891,3.842,892,3.842,893,3.842,894,5.295,895,3.842,896,3.842,897,3.842,898,5.295,899,3.842,900,3.842,901,3.842,902,5.295,903,5.295,904,3.842,905,3.842,906,3.842,907,5.295,908,3.842,909,5.295,910,3.842]],["title/classes/Permission.html",[21,0.182,276,1.707]],["body/classes/Permission.html",[3,0.121,4,0.121,5,0.077,7,0.234,8,0.015,20,0.194,21,0.172,25,0.009,26,0.009,27,1.43,55,1.123,63,1.503,83,1.423,91,0.422,94,1.134,97,1.183,113,2.046,120,0.742,121,0.988,169,1.041,216,1.393,252,1.727,253,1.794,276,2.247,286,2.97,374,2.247,395,2.582,428,2.582,429,2.701,431,0.965,433,3.71,434,3.489,436,3.489,437,4.973,439,3.673,441,3.489,442,3.71,443,3.492,448,2.718,454,2.322,455,3.035,456,2.322,457,2.472,536,3.489,537,3.71,591,2.483,609,2.677,747,1.691,911,2.677,912,3.738,913,3.738,914,3.738,915,3.738,916,3.738,917,3.738,918,3.738,919,3.738,920,3.738,921,3.738,922,3.738,923,3.245]],["title/controllers/PermissionsController.html",[0,1.232,924,2.827]],["body/controllers/PermissionsController.html",[0,1.053,2,1.053,3,0.109,4,0.109,5,0.069,7,0.305,8,0.015,10,2.403,13,0.545,20,0.109,21,0.156,24,1.677,25,0.009,26,0.009,27,0.807,61,1.232,79,1.75,91,0.381,92,1.397,94,0.97,96,1.887,97,1.218,104,1.764,112,2.594,113,1.75,115,2.249,119,1.961,120,0.844,121,0.811,122,1.887,127,4.317,143,2.667,144,2.415,147,1.677,148,1.458,156,1.458,251,1.839,304,1.861,309,1.397,310,2.337,311,2,312,2,318,1.525,319,2.789,320,2.789,323,2.185,324,1.396,327,2.694,328,1.396,331,1.525,335,1.861,336,1.97,337,2.089,340,1.396,342,1.396,344,1.598,348,2.241,351,2.095,353,2.095,355,1.97,356,1.97,358,2.095,362,1.97,364,2.241,533,4.218,536,1.97,537,2.095,702,2.415,872,3.774,924,3.46,925,2.927,926,2.927,927,3.372,928,3.372,929,3.372,930,5.352,931,3.372,932,3.372,933,3.372,934,3.372,935,4.194,936,3.372,937,4.752,938,3.372,939,4.194,940,3.372,941,3.507,942,2.927,943,3.774,944,3.372,945,6.165,946,3.372,947,3.372,948,3.372,949,3.372,950,3.372,951,3.372]],["title/modules/PermissionsModule.html",[27,0.945,44,2.622]],["body/modules/PermissionsModule.html",[2,2.001,3,0.167,4,0.167,5,0.106,7,0.338,8,0.015,13,0.831,20,0.167,21,0.237,25,0.012,26,0.012,27,1.673,29,2.222,30,2.222,31,2.435,32,2.435,33,2.222,34,3.31,35,2.435,44,5.1,48,3.038,49,2.435,50,2.435,52,2.556,54,2.837,55,1.544,120,0.639,276,2.222,372,3.003,374,2.222,591,4.259,596,4.015,924,5.004,941,4.769,942,4.461,952,4.461,953,4.461,954,5.14,955,5.14,956,4.461]],["title/injectables/PermissionsService.html",[88,0.75,941,2.452]],["body/injectables/PermissionsService.html",[3,0.088,4,0.088,5,0.056,7,0.309,8,0.015,13,0.438,20,0.088,21,0.125,22,1.7,23,1.224,25,0.007,26,0.007,27,0.983,55,0.813,60,1.416,61,1.814,62,1.416,63,1.436,73,3.084,79,1.598,88,0.781,89,0.989,91,0.306,92,1.188,94,0.932,96,1.723,97,1.12,112,2.461,115,1.989,119,1.885,120,0.835,121,0.78,122,1.814,123,2.823,141,1.945,156,1.17,169,1.815,177,3.088,241,1.681,244,2.9,251,1.563,252,1.814,253,1.492,276,2.397,278,3.059,309,1.188,310,1.7,311,1.7,312,1.7,318,1.858,319,2.948,320,2.245,323,2.245,324,1.7,327,2.866,328,1.7,331,1.858,337,1.17,340,1.12,342,1.12,377,3.238,381,2.387,386,1.581,389,1.681,390,1.581,391,1.581,395,1.17,396,3.084,397,1.681,398,1.681,399,1.681,400,1.681,401,1.681,402,1.681,403,1.681,404,1.581,405,2.552,406,1.581,407,2.552,409,2.552,410,1.681,411,2.552,413,1.681,414,1.681,415,1.681,416,1.681,417,1.681,418,1.681,419,1.681,420,1.681,421,1.681,422,1.681,423,3.084,424,3.878,425,3.084,428,1.17,429,1.224,533,3.896,536,3.481,537,3.701,602,3.565,609,1.938,618,2.349,658,1.938,926,3.565,937,4.461,941,2.552,943,3.208,956,2.349,957,2.349,958,2.706,959,2.706,960,2.706,961,2.706,962,2.706,963,2.706,964,2.706,965,3.208,966,2.706,967,2.706,968,2.349,969,4.108,970,2.706,971,2.114,972,2.706,973,2.706,974,2.114,975,2.706,976,4.108,977,2.706]],["title/classes/RegisterUserDto.html",[21,0.182,139,2.065]],["body/classes/RegisterUserDto.html",[3,0.119,4,0.119,5,0.075,7,0.266,8,0.015,20,0.166,21,0.311,25,0.009,26,0.009,63,1.483,91,0.414,94,1.037,97,1.22,113,1.585,120,0.908,121,0.908,139,2.682,153,4.45,216,1.375,252,1.061,253,2.152,254,2.16,316,2.16,345,3.651,381,2.25,431,0.947,443,1.824,457,2.122,461,2.55,462,3.558,468,2.278,472,3.727,473,3.406,474,3.406,476,3.406,477,1.659,478,3.221,495,2.436,498,4.233,499,3.185,500,2.024,501,2.626,502,2.024,503,3.954,504,4.335,505,4.335,506,2.864,573,3.183,978,3.667,979,3.667,980,3.667,981,3.667,982,3.667,983,3.667]],["title/interfaces/Response.html",[125,2.452,724,2.452]],["body/interfaces/Response.html",[3,0.154,4,0.154,5,0.097,7,0.33,8,0.015,13,0.768,20,0.198,21,0.219,25,0.011,26,0.011,79,1.273,88,1.159,91,0.536,97,1.044,121,0.837,125,3.788,148,2.053,216,1.635,344,2.25,381,2.563,478,3.043,500,4.151,616,3.401,724,2.95,725,3.709,797,5.261,800,4.367,802,3.709,807,3.401,815,3.709,984,3.709,985,6.38,986,5.293,987,5.293,988,5.293,989,3.709,990,4.122,991,4.122,992,3.401,993,3.401,994,4.122,995,5.293,996,4.122,997,4.122,998,4.122,999,4.122,1000,4.122]],["title/classes/Resume.html",[21,0.182,1001,2.306]],["body/classes/Resume.html",[3,0.105,4,0.105,5,0.066,7,0.272,8,0.015,20,0.179,21,0.149,25,0.008,26,0.008,55,0.969,63,1.353,83,1.228,91,0.364,94,1.133,97,1.149,113,2.044,121,0.993,169,0.898,216,1.255,252,1.747,253,2.073,286,2.739,316,1.089,373,2.8,374,2.024,395,2.381,428,2.612,429,2.491,431,0.833,433,3.421,434,3.217,436,3.529,437,4.939,439,3.61,441,3.529,442,4.155,443,3.326,448,2.448,454,2.004,455,2.734,456,2.004,457,3.102,545,3.944,546,3.944,547,3.752,548,3.944,549,3.944,727,1.781,747,1.459,775,2.8,1001,2.734,1002,2.311,1003,4.78,1004,5.009,1005,4.718,1006,3.226,1007,3.226,1008,3.226,1009,3.226,1010,3.226,1011,3.226,1012,3.226,1013,3.226,1014,3.226,1015,3.226,1016,3.226,1017,3.226,1018,3.226,1019,3.226,1020,3.226,1021,3.226,1022,2.52,1023,3.226,1024,2.311,1025,2.8]],["title/controllers/ResumesController.html",[0,1.232,1026,2.827]],["body/controllers/ResumesController.html",[0,1.009,2,1.009,3,0.105,4,0.105,5,0.066,7,0.301,8,0.015,10,2.33,13,0.523,20,0.105,21,0.149,24,1.607,25,0.008,26,0.008,61,1.181,79,1.794,91,0.365,92,1.355,94,0.995,96,1.936,97,1.225,104,1.691,112,2.655,113,1.794,115,2.285,117,5.717,119,2.011,120,0.832,121,0.832,122,1.936,143,1.783,147,1.607,148,1.397,156,1.397,251,1.783,309,1.355,310,2.282,311,1.939,312,1.939,315,2.314,318,1.462,319,2.734,320,2.734,323,2.119,324,1.338,327,2.655,328,1.338,331,1.462,333,2.524,335,1.783,336,1.888,337,2.026,340,1.338,342,1.338,344,1.531,347,2.314,348,2.147,350,3.948,351,2.007,353,2.007,355,1.888,356,1.888,358,2.007,359,2.314,362,2.737,364,2.147,542,1.888,547,3.755,556,3.755,702,2.314,1001,4.276,1026,3.356,1027,2.805,1028,2.805,1029,4.685,1030,3.231,1031,3.231,1032,4.685,1033,2.805,1034,3.231,1035,3.231,1036,3.231,1037,3.231,1038,4.685,1039,3.231,1040,3.231,1041,3.231,1042,3.231,1043,3.424,1044,2.805,1045,3.66,1046,2.147,1047,3.231,1048,3.231,1049,3.231,1050,3.231,1051,3.231,1052,3.231,1053,3.231,1054,3.231,1055,3.231]],["title/modules/ResumesModule.html",[27,0.945,45,2.622]],["body/modules/ResumesModule.html",[2,2.001,3,0.167,4,0.167,5,0.106,7,0.338,8,0.015,13,0.831,20,0.167,21,0.237,25,0.012,26,0.012,27,1.673,29,2.222,30,2.222,31,2.435,32,2.435,33,2.222,34,3.31,35,2.435,45,5.1,48,3.038,49,2.435,50,2.435,52,2.556,54,2.837,55,1.544,120,0.639,372,3.003,374,2.222,1001,3.003,1024,4.591,1026,5.004,1043,4.769,1044,4.461,1056,4.461,1057,4.461,1058,5.14,1059,5.14,1060,4.461,1061,5.14]],["title/injectables/ResumesService.html",[88,0.75,1043,2.452]],["body/injectables/ResumesService.html",[3,0.079,4,0.079,5,0.05,7,0.299,8,0.015,13,0.393,20,0.079,21,0.112,22,1.564,23,1.098,25,0.007,26,0.007,55,0.729,60,1.27,61,1.695,62,1.27,63,1.342,73,3.094,79,1.61,88,0.718,89,0.887,91,0.274,92,1.093,94,0.932,96,1.737,97,1.132,112,2.506,115,2.006,119,1.884,120,0.828,121,0.779,122,1.813,123,2.846,141,1.991,156,1.05,169,1.805,177,2.971,241,1.508,244,3.314,251,1.438,252,1.969,253,1.884,278,2.56,286,1.207,309,1.093,310,1.564,311,1.564,312,1.564,318,1.709,319,2.836,320,2.098,323,2.098,324,1.564,327,2.383,328,1.564,331,1.709,337,1.05,340,1.005,342,1.005,377,3.058,381,2.286,386,1.418,389,1.508,390,1.418,391,1.418,395,1.05,396,3.252,397,1.508,398,2.347,399,1.508,400,1.508,401,1.508,402,1.508,403,1.508,404,2.71,405,2.347,406,1.418,407,2.347,409,2.347,410,1.508,411,2.347,413,1.508,414,1.508,415,1.508,416,1.508,417,1.508,418,1.508,419,1.508,420,1.508,421,1.508,422,1.508,423,2.881,425,2.881,428,1.05,429,1.098,439,1.977,542,1.418,545,3.322,546,3.322,547,4.028,548,2.706,549,2.706,556,3.731,866,2.706,867,3.28,971,1.896,974,1.896,1001,3.058,1003,3.28,1022,1.896,1043,2.347,1045,2.951,1046,1.613,1060,2.107,1062,2.107,1063,3.778,1064,2.428,1065,2.428,1066,3.778,1067,3.778,1068,2.428,1069,2.428,1070,3.778,1071,2.428,1072,2.428,1073,2.428,1074,2.428,1075,2.428,1076,2.428,1077,1.896,1078,2.951,1079,3.778,1080,2.428,1081,3.778,1082,3.778,1083,3.778,1084,2.428,1085,2.428,1086,4.638,1087,2.428,1088,3.778,1089,3.778,1090,2.428,1091,2.428]],["title/classes/Role.html",[21,0.182,254,1.442]],["body/classes/Role.html",[3,0.118,4,0.118,5,0.075,7,0.265,8,0.015,20,0.191,21,0.168,25,0.009,26,0.009,55,1.096,63,1.477,83,1.388,91,0.412,94,1.129,97,1.109,113,2.036,120,0.732,121,0.989,169,1.015,216,1.369,252,1.704,253,1.771,254,1.866,276,2.548,286,2.931,304,3.252,346,2.665,374,2.208,395,2.548,428,2.548,429,2.665,431,0.941,433,3.661,434,3.443,436,3.443,437,4.943,439,3.644,441,3.443,442,3.966,443,3.464,448,3.34,454,2.265,455,2.983,456,2.265,457,2.643,494,3.252,592,2.848,593,2.265,596,2.848,610,2.422,747,1.649,1004,3.989,1005,3.989,1092,2.611,1093,3.646,1094,3.646,1095,3.646,1096,3.646,1097,3.646,1098,3.646,1099,3.646,1100,3.646,1101,3.646,1102,3.646,1103,3.646,1104,3.165]],["title/controllers/RolesController.html",[0,1.232,1105,2.827]],["body/controllers/RolesController.html",[0,1.064,2,1.064,3,0.111,4,0.111,5,0.07,7,0.306,8,0.015,10,2.421,13,0.551,20,0.111,21,0.157,24,1.695,25,0.009,26,0.009,61,1.245,79,1.757,91,0.385,92,1.408,94,0.974,96,1.895,97,1.219,104,1.783,112,2.6,113,1.757,115,2.252,119,1.969,120,0.814,121,0.814,122,1.895,127,4.327,143,2.687,147,1.695,148,1.474,156,1.474,157,3.134,251,1.853,309,1.408,310,2.351,311,2.015,312,2.015,318,1.541,319,2.802,320,2.802,323,2.202,324,1.411,327,2.703,328,1.411,331,1.541,335,1.881,336,1.991,337,2.105,340,1.411,342,1.411,344,1.615,348,2.264,351,2.117,353,2.117,355,1.991,356,1.991,358,2.117,362,1.991,364,2.264,558,4.233,702,2.441,872,3.803,930,5.378,935,4.226,939,4.226,1105,3.487,1106,2.958,1107,2.958,1108,2.958,1109,3.408,1110,3.408,1111,3.408,1112,3.408,1113,3.408,1114,3.408,1115,3.408,1116,3.408,1117,4.765,1118,3.408,1119,3.408,1120,2.958,1121,3.803,1122,3.408,1123,6.195,1124,3.408,1125,3.408,1126,3.408,1127,3.408,1128,3.408,1129,3.408]],["title/modules/RolesModule.html",[27,0.945,46,2.452]],["body/modules/RolesModule.html",[2,1.966,3,0.162,4,0.162,5,0.103,7,0.336,8,0.015,13,0.808,20,0.162,21,0.23,25,0.011,26,0.011,27,1.651,29,2.159,30,2.159,31,2.366,32,2.366,33,2.159,34,3.267,35,3.267,46,4.806,48,2.983,49,2.366,50,2.366,52,2.483,54,2.756,55,1.5,120,0.621,157,4.44,254,1.825,372,2.918,374,2.159,593,3.911,597,3.576,1105,4.938,1120,4.335,1130,4.335,1131,4.335,1132,4.335,1133,4.994,1134,4.994,1135,4.335]],["title/injectables/RolesService.html",[88,0.75,157,2.178]],["body/injectables/RolesService.html",[3,0.084,4,0.084,5,0.053,7,0.312,8,0.015,13,0.419,20,0.084,21,0.12,22,1.646,23,1.173,25,0.007,26,0.007,27,0.621,55,0.779,60,1.357,61,1.981,62,1.357,63,1.399,73,3.06,79,1.568,88,0.756,89,0.948,91,0.293,92,1.15,94,0.917,96,1.691,97,1.11,112,2.434,115,1.965,119,1.854,120,0.877,121,0.767,122,1.784,123,2.77,141,2.052,156,1.122,157,2.195,169,1.845,177,3.139,241,1.611,244,2.825,251,1.513,252,1.857,253,1.453,254,2.136,278,3.227,304,2.669,309,1.15,310,1.646,311,1.646,312,1.646,318,1.799,319,2.905,320,2.187,323,2.187,324,1.646,327,2.839,328,1.646,331,1.799,337,1.122,340,1.074,342,1.074,346,1.799,377,3.168,381,2.348,386,1.515,389,1.611,390,1.515,391,1.515,395,1.122,396,3.004,397,1.611,398,1.611,399,1.611,400,1.611,401,1.611,402,1.611,403,1.611,404,3.604,405,2.47,406,1.515,407,2.47,409,2.47,410,1.611,411,2.47,413,1.611,414,1.611,415,1.611,416,1.611,417,1.611,418,1.611,419,1.611,420,1.611,421,1.611,422,1.611,423,3.004,424,3.777,425,3.004,428,1.122,429,1.173,494,2.195,536,1.515,537,1.611,558,3.832,603,3.452,610,1.723,612,2.848,619,2.026,634,2.026,639,2.251,866,1.858,965,3.106,968,2.251,971,2.026,974,2.026,1077,2.026,1078,2.026,1108,3.452,1117,4.402,1121,3.106,1135,2.251,1136,2.251,1137,2.594,1138,2.594,1139,2.594,1140,2.594,1141,2.594,1142,2.594,1143,2.594,1144,2.251,1145,2.594,1146,3.976,1147,2.594,1148,2.594,1149,2.594,1150,3.976,1151,3.976,1152,2.594,1153,2.594,1154,2.594,1155,2.594]],["title/injectables/TransformInterceptor.html",[88,0.75,993,2.827]],["body/injectables/TransformInterceptor.html",[3,0.149,4,0.149,5,0.094,7,0.327,8,0.015,13,0.744,20,0.194,21,0.212,22,1.905,25,0.011,26,0.011,79,1.234,88,1.135,89,1.681,91,0.52,92,1.728,94,0.888,96,1.331,97,0.714,119,1.795,120,0.743,121,0.743,122,1.728,125,2.858,148,1.99,344,2.18,381,1.751,478,2.473,500,3.662,616,3.295,724,2.858,796,3.994,797,5.826,800,5.03,802,4.667,807,3.295,815,3.594,984,3.594,985,5.186,986,5.186,987,6.096,988,5.759,989,3.594,990,3.994,991,3.994,992,3.295,993,4.279,994,5.759,995,6.096,996,3.994,997,3.994,998,3.994,999,3.994,1000,3.994,1156,4.601,1157,4.601,1158,4.601]],["title/classes/UpdateCompanyDto.html",[21,0.182,332,2.622]],["body/classes/UpdateCompanyDto.html",[3,0.192,4,0.192,5,0.121,7,0.314,8,0.015,20,0.192,21,0.273,25,0.013,26,0.013,309,1.709,314,3.671,332,4.636,341,4.616,431,1.526,508,4.616,747,2.673,810,2.8,1159,5.13,1160,3.453,1161,3.262,1162,5.91]],["title/classes/UpdateFileDto.html",[21,0.182,668,2.622]],["body/classes/UpdateFileDto.html",[3,0.192,4,0.192,5,0.122,7,0.314,8,0.014,20,0.192,21,0.273,25,0.013,26,0.013,309,1.715,431,1.531,513,3.683,515,4.631,668,4.644,682,4.631,747,2.681,810,2.809,1160,3.464,1161,3.272,1163,5.146,1164,5.928]],["title/classes/UpdateJobDto.html",[21,0.182,759,2.622]],["body/classes/UpdateJobDto.html",[3,0.192,4,0.192,5,0.121,7,0.314,8,0.015,20,0.192,21,0.273,25,0.013,26,0.013,309,1.709,431,1.526,460,4.233,479,3.453,747,2.673,759,4.636,763,4.616,810,2.8,1160,3.453,1161,3.262,1165,5.13,1166,5.91]],["title/classes/UpdatePermissionDto.html",[21,0.182,937,2.622]],["body/classes/UpdatePermissionDto.html",[3,0.192,4,0.192,5,0.122,7,0.314,8,0.014,20,0.192,21,0.273,25,0.013,26,0.013,309,1.715,431,1.531,533,3.683,535,4.631,747,2.681,810,2.809,937,4.644,943,4.631,1160,3.464,1161,3.272,1167,5.146,1168,5.928]],["title/classes/UpdateResumeDto.html",[21,0.182,1046,2.622]],["body/classes/UpdateResumeDto.html",[3,0.192,4,0.192,5,0.121,7,0.314,8,0.015,20,0.192,21,0.273,25,0.013,26,0.013,309,1.709,431,1.526,542,3.453,544,4.233,747,2.673,810,2.8,1045,4.616,1046,4.636,1160,3.453,1161,3.262,1169,5.13,1170,5.91]],["title/classes/UpdateRoleDto.html",[21,0.182,1117,2.622]],["body/classes/UpdateRoleDto.html",[3,0.192,4,0.192,5,0.122,7,0.314,8,0.014,20,0.192,21,0.273,25,0.013,26,0.013,309,1.715,431,1.531,558,3.683,560,4.631,747,2.681,810,2.809,1117,4.644,1121,4.631,1160,3.464,1161,3.272,1171,5.146,1172,5.928]],["title/classes/UpdateUserDto.html",[21,0.182,1173,2.622]],["body/classes/UpdateUserDto.html",[3,0.175,4,0.175,5,0.11,7,0.321,8,0.015,20,0.175,21,0.304,25,0.012,26,0.012,91,0.608,94,0.8,97,1.023,113,1.443,121,0.669,154,3.576,169,1.499,216,1.769,252,2.206,309,1.557,431,1.39,461,2.677,462,2.984,472,3.126,477,2.435,478,2.228,495,3.576,502,2.971,503,2.971,747,2.435,810,2.551,1160,3.145,1161,2.971,1173,4.383,1174,5.726,1175,5.383,1176,5.383,1177,5.383]],["title/classes/User.html",[21,0.182,115,1.142]],["body/classes/User.html",[3,0.103,4,0.103,5,0.065,7,0.245,8,0.015,20,0.177,21,0.146,25,0.008,26,0.008,55,0.95,63,1.334,83,2.421,91,0.357,94,1.145,97,1.194,113,2.065,115,1.334,120,0.744,121,0.994,169,0.881,170,3.899,216,1.237,252,1.731,253,1.996,254,2.186,286,2.708,316,1.837,345,2.848,374,1.995,381,1.755,395,2.354,428,2.354,429,2.463,431,0.817,433,3.382,434,3.181,436,3.181,437,4.967,439,3.475,441,3.496,442,3.952,443,3.496,448,2.413,454,1.965,455,2.695,456,1.965,457,2.839,462,2.086,503,3.005,504,3.382,505,3.382,590,2.101,594,2.101,597,2.265,611,2.265,1004,3.603,1005,3.603,1178,2.265,1179,3.163,1180,3.163,1181,3.163,1182,3.163,1183,3.163,1184,3.163,1185,3.163,1186,4.612,1187,3.163,1188,3.163,1189,3.163,1190,3.163,1191,3.163,1192,3.163,1193,3.163,1194,3.163,1195,3.163,1196,2.745]],["title/controllers/UsersController.html",[0,1.232,1197,2.827]],["body/controllers/UsersController.html",[0,0.996,2,0.996,3,0.103,4,0.103,5,0.065,7,0.299,8,0.015,10,2.308,13,0.516,20,0.103,21,0.147,24,1.586,25,0.008,26,0.008,61,1.165,73,3.095,79,1.712,91,0.36,92,1.342,94,0.949,96,1.846,97,1.203,104,1.668,112,2.562,113,1.712,115,2.315,117,5.7,119,1.918,120,0.793,121,0.793,122,1.846,123,2.846,139,1.668,141,1.629,143,2.561,146,2.711,147,1.586,148,1.379,154,3.083,169,1.292,177,2.846,224,2.862,251,1.766,252,0.922,283,2.491,285,2.768,286,1.586,287,2.768,309,1.582,310,2.264,311,1.921,312,2.264,315,2.284,318,1.442,319,2.887,320,2.717,323,2.474,324,1.32,325,2.491,327,2.383,328,1.32,329,2.491,335,2.561,336,1.863,337,2.006,340,1.32,342,1.32,344,1.511,347,2.284,350,3.323,351,1.981,352,2.491,353,1.981,355,1.863,356,1.863,359,2.284,360,2.491,362,1.863,363,2.491,502,3.677,1033,2.768,1173,4.426,1197,3.323,1198,2.768,1199,2.768,1200,2.768,1201,3.189,1202,3.189,1203,3.189,1204,3.189,1205,2.768,1206,3.189,1207,3.189,1208,2.768,1209,2.768,1210,3.189,1211,3.189,1212,3.189,1213,3.189,1214,3.189,1215,3.189,1216,3.189,1217,3.189]],["title/modules/UsersModule.html",[27,0.945,47,2.452]],["body/modules/UsersModule.html",[2,1.922,3,0.156,4,0.156,5,0.099,7,0.339,8,0.015,13,0.779,20,0.156,21,0.222,25,0.011,26,0.011,27,1.624,29,2.084,30,2.084,31,2.284,32,2.284,33,2.084,34,3.214,35,3.214,47,4.768,48,2.917,49,2.284,50,2.284,52,2.397,54,2.66,55,1.448,115,1.394,120,0.765,224,4.188,254,1.761,372,2.816,374,2.662,590,4.089,593,3.824,594,3.202,595,4.183,597,3.452,1197,4.857,1208,4.183,1218,4.183,1219,4.183,1220,4.819,1221,4.819,1222,4.819,1223,4.183]],["title/injectables/UsersService.html",[88,0.75,224,2.065]],["body/injectables/UsersService.html",[3,0.06,4,0.06,5,0.038,7,0.3,8,0.015,13,0.299,20,0.06,21,0.085,22,1.257,23,1.373,25,0.005,26,0.005,55,0.555,60,0.967,61,1.943,62,0.967,63,0.878,73,2.986,79,1.787,88,0.577,89,0.675,91,0.209,92,0.878,94,0.973,96,1.697,97,1.135,98,2.372,112,2.197,115,2.01,119,1.826,120,0.882,121,0.756,122,1.758,123,2.519,139,2.342,141,1.357,148,0.799,154,2.017,169,1.885,170,3.206,177,3.158,180,2.372,216,0.814,221,2.635,224,1.588,229,2.635,234,2.372,236,2.568,237,2.258,241,1.148,244,2.258,251,1.155,252,1.81,253,2.111,254,2.144,263,1.443,265,1.443,278,2.133,280,2.635,283,2.372,309,0.878,310,1.257,311,1.257,312,1.257,316,1.024,318,1.373,319,2.541,320,1.748,323,1.748,324,1.257,327,1.962,328,1.257,337,0.799,340,0.765,342,0.765,345,2.588,377,3.283,381,2.024,386,1.079,388,1.604,389,1.148,390,1.079,391,1.079,392,2.635,395,0.799,396,2.401,397,1.148,398,1.148,399,1.148,400,1.148,401,1.148,402,1.148,403,1.148,404,2.89,405,1.886,406,1.079,407,1.886,409,1.886,410,1.148,411,1.886,413,1.148,414,1.148,415,1.148,416,1.148,417,1.148,418,1.148,419,1.148,420,1.148,421,1.148,422,1.148,423,1.886,425,1.886,428,0.799,429,0.836,502,2.935,503,3.454,504,3.072,505,3.072,594,1.227,601,1.604,606,3.355,610,1.227,611,1.323,614,2.174,619,1.443,634,2.372,637,2.635,642,2.635,655,1.604,658,2.174,866,2.768,873,2.635,965,3.497,1077,3.019,1078,3.863,1144,1.604,1173,3.533,1200,2.635,1205,2.635,1209,1.604,1223,1.604,1224,1.604,1225,3.865,1226,3.865,1227,3.865,1228,3.036,1229,3.036,1230,3.865,1231,1.847,1232,1.847,1233,1.847,1234,1.847,1235,3.036,1236,1.847,1237,3.036,1238,5.317,1239,1.847,1240,1.847,1241,1.847,1242,1.847,1243,1.847,1244,1.847,1245,1.847,1246,1.847,1247,1.847,1248,1.847,1249,1.604,1250,1.847,1251,3.036,1252,1.847,1253,1.847,1254,4.946,1255,3.865,1256,3.036,1257,3.036,1258,3.036,1259,1.847,1260,4.476,1261,3.036,1262,3.036,1263,3.036,1264,1.847,1265,1.847,1266,3.036,1267,1.847,1268,1.847,1269,3.036,1270,1.847,1271,1.847,1272,1.847,1273,1.847,1274,1.847]],["title/coverage.html",[1275,4.682]],["body/coverage.html",[0,2.17,1,1.875,5,0.082,6,2.273,8,0.015,14,1.627,18,1.445,21,0.36,25,0.007,26,0.007,33,1.132,87,1.74,88,1.419,90,2.273,102,1.875,103,2.273,112,0.919,115,1.158,121,0.325,125,1.627,139,1.37,141,0.919,146,1.53,147,1.302,149,1.875,153,3.022,157,1.445,195,1.74,196,1.74,215,2.273,224,1.37,254,0.957,276,1.132,306,1.875,307,2.273,314,1.627,316,1.641,332,1.74,338,1.627,370,1.875,375,2.273,432,2.869,459,3.129,460,3.484,479,1.53,495,3.62,502,1.445,507,2.273,508,3.129,513,1.627,514,2.273,515,3.129,533,1.627,534,2.273,535,3.129,542,1.53,543,3.129,544,3.484,556,1.627,558,1.627,559,2.273,560,3.129,579,1.875,580,2.273,582,1.627,590,1.74,591,1.74,593,1.627,598,2.273,612,1.875,613,2.045,614,1.875,629,6.439,660,2.273,661,1.875,662,2.273,668,1.74,680,1.627,710,1.875,713,2.273,724,2.488,726,2.273,727,1.445,728,2.869,749,1.875,751,1.875,752,2.273,759,1.74,761,1.627,776,2.273,792,2.273,793,3.129,809,2.045,823,2.273,840,2.273,842,2.273,851,2.273,911,2.869,924,1.875,925,2.273,937,1.74,941,1.627,957,2.273,984,3.129,992,1.875,993,1.875,1001,1.53,1002,2.869,1024,1.875,1026,1.875,1027,2.273,1043,1.627,1046,1.74,1062,2.273,1092,2.869,1105,1.875,1106,2.273,1117,1.74,1136,2.273,1159,2.273,1163,2.273,1165,2.273,1167,2.273,1169,2.273,1171,2.273,1173,1.74,1174,2.273,1178,2.869,1197,1.875,1198,2.273,1224,2.273,1275,2.273,1276,2.618,1277,2.618,1278,2.618,1279,7.838,1280,4.005,1281,6.812,1282,4.005,1283,6.192,1284,5.448,1285,6.443,1286,4.864,1287,5.448,1288,7.336,1289,4.222,1290,5.097,1291,2.618,1292,2.273,1293,2.618,1294,2.618,1295,2.618,1296,2.618,1297,2.618,1298,2.618,1299,2.618]],["title/dependencies.html",[30,2.054,1300,2.858]],["body/dependencies.html",[8,0.015,13,0.814,17,2.94,21,0.292,25,0.011,26,0.011,30,2.176,55,1.512,60,2.633,61,1.839,62,2.633,63,1.83,155,3.126,200,3.126,203,3.931,205,3.931,295,4.956,337,2.176,390,2.94,391,2.94,468,3.126,477,2.276,684,3.604,747,2.276,807,3.604,831,4.369,847,4.369,989,3.931,1161,2.778,1249,4.369,1301,6.92,1302,5.033,1303,5.033,1304,5.033,1305,5.033,1306,5.033,1307,5.033,1308,5.033,1309,5.033,1310,5.033,1311,5.033,1312,5.033,1313,5.033,1314,5.033,1315,5.033,1316,5.033,1317,5.033,1318,5.033,1319,5.033,1320,5.033,1321,5.033,1322,5.033,1323,5.033,1324,5.033,1325,5.033,1326,5.033,1327,5.033]],["title/miscellaneous/functions.html",[1328,2.045,1329,4.122]],["body/miscellaneous/functions.html",[8,0.013,25,0.013,26,0.013,33,3.286,91,0.706,1292,5.429,1328,3.885,1329,5.429,1330,6.254]],["title/index.html",[91,0.446,1331,3.426]],["body/index.html",[2,1.197,8,0.015,14,3.76,18,4.002,25,0.01,26,0.01,27,0.918,28,5.779,29,1.658,30,1.658,31,1.817,32,1.817,33,1.658,34,1.817,35,1.817,36,3.328,37,3.328,38,3.328,39,5.204,40,4.548,41,4.818,42,4.548,43,4.548,44,4.548,45,4.548,46,4.505,47,4.505,48,2.506,49,1.817,50,1.817,89,1.401,157,4.002,191,3.328,193,3.328,194,3.328,195,4.021,196,4.021,224,3.866,290,2.995,338,3.76,366,3.328,367,3.328,406,3.089,431,0.99,582,3.76,585,3.328,586,3.328,680,3.76,705,3.328,706,3.328,725,2.995,761,3.76,770,3.328,771,3.328,941,3.76,952,3.328,953,3.328,1043,3.76,1056,3.328,1057,3.328,1130,3.328,1131,3.328,1132,3.328,1218,3.328,1219,3.328,1331,3.328,1332,3.834,1333,3.834]],["title/modules.html",[29,2.333]],["body/modules.html",[8,0.012,25,0.012,26,0.012,28,3.932,29,2.374,39,3.648,40,3.648,41,3.648,42,3.648,43,3.648,44,3.648,45,3.648,46,3.411,47,3.411,1334,8.072,1335,8.072,1336,8.072,1337,8.072]],["title/properties.html",[216,1.273,1300,2.858]],["body/properties.html",[8,0.014,25,0.013,26,0.013,216,1.645,346,2.775,1338,6.135,1339,6.135,1340,6.135,1341,6.135,1342,6.135,1343,6.135,1344,6.135,1345,6.135]],["title/miscellaneous/typealiases.html",[1328,2.045,1346,4.749]],["body/miscellaneous/typealiases.html",[8,0.012,25,0.012,26,0.012,91,0.652,121,0.717,387,5.373,432,4.132,455,4.61,609,4.926,610,4.57,611,4.926,728,4.132,748,5.373,911,4.132,1002,4.132,1022,5.373,1092,4.132,1178,4.132,1328,3.584,1347,5.769,1348,5.008,1349,5.008,1350,5.008,1351,5.008,1352,5.008,1353,5.008]],["title/miscellaneous/variables.html",[1328,2.045,1354,4.122]],["body/miscellaneous/variables.html",[5,0.026,8,0.015,10,2.455,12,0.978,25,0.004,26,0.004,27,1.726,61,2.098,79,0.336,83,0.477,91,0.141,97,0.611,115,1.559,120,0.896,121,0.49,123,0.593,146,1.276,147,1.086,169,0.349,236,4.001,237,3.518,251,1.648,252,2.261,253,2.176,254,1.27,263,3.382,276,1.705,286,3.586,304,2.176,305,6.258,308,3.422,309,1.252,316,1.33,327,1.718,335,2.39,370,1.564,395,3.118,428,0.542,432,0.897,434,4.212,436,4.212,458,1.087,478,0.904,500,0.691,536,4.212,537,4.479,547,0.778,590,1.451,591,1.451,593,1.356,612,1.564,613,1.706,614,1.564,629,5.632,663,0.978,727,2.176,728,0.897,749,1.564,750,1.087,753,3.422,800,0.897,809,1.706,813,1.087,837,6.258,911,0.897,923,1.087,992,2.079,1001,2.303,1002,0.897,1024,1.564,1025,1.087,1028,4.043,1092,0.897,1104,1.087,1107,3.759,1178,0.897,1196,1.087,1199,3.422,1289,1.087,1290,1.087,1328,0.778,1348,1.087,1349,1.087,1350,1.087,1351,1.087,1352,1.087,1353,1.087,1354,1.087,1355,2.903,1356,3.943,1357,1.252,1358,1.252,1359,4.33,1360,2.183,1361,7.243,1362,7.243,1363,7.21,1364,7.809,1365,7.809,1366,1.252,1367,1.252,1368,7.21,1369,1.252,1370,2.183,1371,1.252,1372,2.903,1373,2.183,1374,1.252,1375,2.183,1376,1.252,1377,2.183,1378,1.252,1379,2.183,1380,2.183,1381,1.252,1382,2.903,1383,2.183,1384,1.252,1385,2.183,1386,1.252,1387,2.183,1388,1.252,1389,2.183,1390,1.252,1391,1.252,1392,1.252,1393,1.252,1394,2.183,1395,1.252,1396,2.183,1397,2.183,1398,1.252,1399,2.903,1400,2.183,1401,1.252,1402,2.183,1403,1.252,1404,2.183,1405,1.252,1406,2.183,1407,1.252,1408,2.183,1409,2.183,1410,1.252,1411,2.183,1412,1.252,1413,2.903,1414,2.183,1415,1.252,1416,2.183,1417,1.252,1418,2.183,1419,1.252,1420,1.252,1421,2.183,1422,1.252,1423,2.183,1424,2.183,1425,1.252,1426,2.183,1427,1.252,1428,2.903,1429,2.183,1430,1.252,1431,2.183,1432,1.252,1433,2.183,1434,1.252,1435,2.183,1436,2.183,1437,1.252,1438,2.183,1439,1.252,1440,2.903,1441,2.183,1442,1.252,1443,2.183,1444,1.252,1445,2.183,1446,1.252,1447,1.252,1448,1.252,1449,1.252,1450,1.252,1451,1.252,1452,1.252,1453,1.252]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":629,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1339,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":404,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["10.0.3",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":695,"title":{},"body":{"controllers/FilesController.html":{}}}],["15t06:47:49.369z",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1332,"title":{},"body":{"index.html":{}}}],["2",{"_index":290,"title":{"classes/Company-2.html":{}},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["2.1.3",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":644,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["2023",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":650,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["25",{"_index":1333,"title":{},"body":{"index.html":{}}}],["3.1.9",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["55",{"_index":654,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1.0",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["7.1.12",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["__v",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1269,"title":{},"body":{"injectables/UsersService.html":{}}}],["action",{"_index":720,"title":{},"body":{"injectables/FilesService.html":{}}}],["active",{"_index":493,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["addfiletypevalidator",{"_index":690,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":693,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":721,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":634,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["admin@gmail.com",{"_index":642,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["admin_role",{"_index":612,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":638,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":647,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":504,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["aliases",{"_index":1347,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":658,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/UsersService.html":{}}}],["another",{"_index":1258,"title":{},"body":{"injectables/UsersService.html":{}}}],["api",{"_index":390,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apipath",{"_index":536,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appservice",{"_index":14,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"index.html":{}}}],["aqp",{"_index":389,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["aqp(querystring",{"_index":400,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":820,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["array",{"_index":481,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["array'})@ismongoid({each",{"_index":564,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["array'})@isstring({each",{"_index":530,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["async",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":793,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":798,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:15",{"_index":801,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:26",{"_index":804,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":102,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":808,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":811,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":841,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":39,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["author",{"_index":1343,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":18,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"index.html":{}}}],["await",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["badrequestexception",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('can",{"_index":1273,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('not",{"_index":1086,"title":{},"body":{"injectables/ResumesService.html":{}}}],["badrequestexception(`can",{"_index":1154,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception(`email",{"_index":1256,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`invalid",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(`not",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["badrequestexception(`permission",{"_index":967,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestexception(`role",{"_index":1145,"title":{},"body":{"injectables/RolesService.html":{}}}],["based",{"_index":819,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["basename",{"_index":907,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1249,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["beard",{"_index":652,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["black",{"_index":651,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["body",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["body(\"status",{"_index":1053,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":448,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":622,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["break",{"_index":881,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1337,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1334,"title":{},"body":{"modules.html":{}}}],["build",{"_index":696,"title":{},"body":{"controllers/FilesController.html":{}}}],["bulk",{"_index":631,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["callhandler",{"_index":987,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":794,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":799,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["captain",{"_index":1344,"title":{},"body":{"properties.html":{}}}],["captainhac@gmail.com",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":876,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":894,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":898,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["check",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["class",{"_index":21,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":431,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodule",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_exports",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_imports",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_companiesmodule",{"_index":366,"title":{},"body":{"modules/CompaniesModule.html":{},"index.html":{}}}],["cluster_companiesmodule_providers",{"_index":367,"title":{},"body":{"modules/CompaniesModule.html":{},"index.html":{}}}],["cluster_databasesmodule",{"_index":585,"title":{},"body":{"modules/DatabasesModule.html":{},"index.html":{}}}],["cluster_databasesmodule_providers",{"_index":586,"title":{},"body":{"modules/DatabasesModule.html":{},"index.html":{}}}],["cluster_filesmodule",{"_index":705,"title":{},"body":{"modules/FilesModule.html":{},"index.html":{}}}],["cluster_filesmodule_providers",{"_index":706,"title":{},"body":{"modules/FilesModule.html":{},"index.html":{}}}],["cluster_jobsmodule",{"_index":770,"title":{},"body":{"modules/JobsModule.html":{},"index.html":{}}}],["cluster_jobsmodule_providers",{"_index":771,"title":{},"body":{"modules/JobsModule.html":{},"index.html":{}}}],["cluster_permissionsmodule",{"_index":952,"title":{},"body":{"modules/PermissionsModule.html":{},"index.html":{}}}],["cluster_permissionsmodule_providers",{"_index":953,"title":{},"body":{"modules/PermissionsModule.html":{},"index.html":{}}}],["cluster_resumesmodule",{"_index":1056,"title":{},"body":{"modules/ResumesModule.html":{},"index.html":{}}}],["cluster_resumesmodule_providers",{"_index":1057,"title":{},"body":{"modules/ResumesModule.html":{},"index.html":{}}}],["cluster_rolesmodule",{"_index":1130,"title":{},"body":{"modules/RolesModule.html":{},"index.html":{}}}],["cluster_rolesmodule_exports",{"_index":1131,"title":{},"body":{"modules/RolesModule.html":{},"index.html":{}}}],["cluster_rolesmodule_providers",{"_index":1132,"title":{},"body":{"modules/RolesModule.html":{},"index.html":{}}}],["cluster_usersmodule",{"_index":1218,"title":{},"body":{"modules/UsersModule.html":{},"index.html":{}}}],["cluster_usersmodule_exports",{"_index":1219,"title":{},"body":{"modules/UsersModule.html":{},"index.html":{}}}],["cluster_usersmodule_providers",{"_index":1220,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["companies",{"_index":308,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":369,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":339,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":306,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":40,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"index.html":{},"modules.html":{}}}],["companiesservice",{"_index":338,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"index.html":{}}}],["company",{"_index":316,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company's",{"_index":464,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["company.dto",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":508,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:12",{"_index":510,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:15",{"_index":511,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:6",{"_index":512,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:9",{"_index":509,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":373,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":387,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":545,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":379,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":370,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1248,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1267,"title":{},"body":{"injectables/UsersService.html":{}}}],["configmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get(\"jwt_access_token_secret",{"_index":839,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('mongo_url",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":891,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":871,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":843,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":376,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":825,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":777,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":958,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":796,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1064,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1137,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(usermodel",{"_index":601,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":885,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":802,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":816,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":815,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":999,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":584,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":685,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('jobs",{"_index":764,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('permissions",{"_index":944,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1047,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1122,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('users",{"_index":1210,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["cookie",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["cookies",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["countpermission",{"_index":625,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":627,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":623,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1275,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":309,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":348,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["create(createcompanydto",{"_index":313,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":714,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":754,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":926,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createroledto",{"_index":1108,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createusercv",{"_index":1030,"title":{},"body":{"controllers/ResumesController.html":{}}}],["create(createusercvdto",{"_index":1067,"title":{},"body":{"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1200,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":314,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":872,"title":{},"body":{"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["createdat",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":395,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":513,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":479,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":853,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":533,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":542,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":558,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createusercv",{"_index":1032,"title":{},"body":{"controllers/ResumesController.html":{}}}],["createusercvdto",{"_index":556,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":502,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":323,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["data",{"_index":500,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":581,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":588,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":583,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":579,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":41,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"index.html":{},"modules.html":{}}}],["databasesservice",{"_index":582,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"index.html":{}}}],["date",{"_index":439,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["date(value",{"_index":489,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["date.now()}${extname",{"_index":910,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["declarations",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["decorators",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":94,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('permission",{"_index":934,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["delete(':id')@responsemessage('remove",{"_index":329,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('role",{"_index":1115,"title":{},"body":{"controllers/RolesController.html":{}}}],["deleteat",{"_index":433,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["deleted",{"_index":935,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["deletedat",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletedby",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":890,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":30,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":346,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"properties.html":{}}}],["destination",{"_index":893,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dir",{"_index":887,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["directory",{"_index":880,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["disable",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["diskstorage",{"_index":864,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":822,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["dto/create",{"_index":340,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["each",{"_index":482,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["eexist",{"_index":877,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":491,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["enddate",{"_index":492,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["enotdir",{"_index":882,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":854,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":857,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["err",{"_index":805,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["error.code",{"_index":875,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":697,"title":{},"body":{"controllers/FilesController.html":{}}}],["exception",{"_index":818,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exclude",{"_index":1266,"title":{},"body":{"injectables/UsersService.html":{}}}],["exec",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":800,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":968,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["exists",{"_index":873,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["express",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":671,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":810,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":902,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":903,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":829,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":835,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":837,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["fetched",{"_index":930,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.dto",{"_index":682,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":515,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":699,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":683,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":675,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":663,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":708,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":681,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":661,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":42,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"index.html":{},"modules.html":{}}}],["filesservice",{"_index":680,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"index.html":{}}}],["filetype",{"_index":691,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":397,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":401,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":402,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":909,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["findall",{"_index":310,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":318,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyusers",{"_index":1063,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyusers(user",{"_index":1070,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":311,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":324,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1228,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1235,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":1225,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":895,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["found",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["foundrole",{"_index":1152,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1153,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1270,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1272,"title":{},"body":{"injectables/UsersService.html":{}}}],["fs",{"_index":863,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":869,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":635,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1329,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":505,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":1246,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1252,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/account')@responsemessage('get",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@responsemessage('get",{"_index":1035,"title":{},"body":{"controllers/ResumesController.html":{}}}],["get(':id')@responsemessage('permission",{"_index":932,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["get(':id')@responsemessage('role",{"_index":1113,"title":{},"body":{"controllers/RolesController.html":{}}}],["get()@responsemessage('get",{"_index":1033,"title":{},"body":{"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["get()@responsemessage('permissions",{"_index":929,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["get()@responsemessage('roles",{"_index":1111,"title":{},"body":{"controllers/RolesController.html":{}}}],["gethashpassword",{"_index":1226,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["getresumesbyuser",{"_index":1029,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumesbyuser(@user",{"_index":1048,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumesbyuser(user",{"_index":1037,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getrootpath",{"_index":852,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["guard/jwt",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["guard/local",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":996,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["handlegetaccount",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(response",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(@req",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":795,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":803,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":1238,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1260,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1247,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1253,"title":{},"body":{"injectables/UsersService.html":{}}}],["hello",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["hierarchy",{"_index":884,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":1003,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["httponly",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://github.com/ismhac",{"_index":1340,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":679,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":698,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":455,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hắc",{"_index":1345,"title":{},"body":{"properties.html":{}}}],["id",{"_index":327,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":836,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":901,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":905,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":616,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":91,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["init",{"_index":659,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":613,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":88,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["injectmodel",{"_index":386,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":393,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":785,"title":{},"body":{"injectables/JobsService.html":{}}}],["injectmodel(permission.name",{"_index":618,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1075,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":619,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(user.name",{"_index":617,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(usermodel.name",{"_index":1250,"title":{},"body":{"injectables/UsersService.html":{}}}],["intercept",{"_index":994,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1157,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":724,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":725,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"index.html":{}}}],["invalid",{"_index":850,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["is_public_key",{"_index":809,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":494,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{}}}],["isarray",{"_index":469,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["isboolean",{"_index":470,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["iscreate",{"_index":656,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["isdate",{"_index":471,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isdate({message",{"_index":520,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":434,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":498,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isemail()@isnotempty({message",{"_index":573,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isexist",{"_index":965,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["isglobal",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":620,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":499,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotempty",{"_index":472,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty({message",{"_index":461,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":473,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":516,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isobject",{"_index":474,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["ispublic",{"_index":813,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":475,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isvalid",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1229,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1237,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":879,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["iuser",{"_index":112,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":727,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Resume.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job.dto",{"_index":763,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":460,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:10",{"_index":466,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:13",{"_index":465,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:19",{"_index":526,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:24",{"_index":531,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:30",{"_index":517,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:33",{"_index":525,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:36",{"_index":528,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:39",{"_index":527,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:42",{"_index":524,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:45",{"_index":518,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:50",{"_index":532,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:55",{"_index":521,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:59",{"_index":523,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:7",{"_index":463,"title":{},"body":{"classes/Company-1.html":{}}}],["job.name",{"_index":775,"title":{},"body":{"modules/JobsModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":748,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":546,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":779,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobs",{"_index":753,"title":{},"body":{"controllers/JobsController.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":773,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":762,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":749,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":751,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":43,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"index.html":{},"modules.html":{}}}],["jobsservice",{"_index":761,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"index.html":{}}}],["join",{"_index":867,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{}}}],["join(this.getrootpath",{"_index":899,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|jpeg|image\\/jpeg|png|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain)$/i",{"_index":692,"title":{},"body":{"controllers/FilesController.html":{}}}],["jwt",{"_index":831,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":87,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":834,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":195,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{}}}],["l",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["legend",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["level",{"_index":487,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["license",{"_index":1341,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":319,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["literal",{"_index":441,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["local",{"_index":847,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":149,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":196,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"index.html":{}}}],["location",{"_index":484,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":599,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":608,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(user",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":435,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["luffy",{"_index":641,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["male",{"_index":645,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":990,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":998,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":694,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":478,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":537,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1328,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":98,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":27,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/UsersModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":29,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{}}}],["mongoid",{"_index":557,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{}}}],["mongoose",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1023,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":457,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["mongoose/dist/soft",{"_index":388,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["mongoosemodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":372,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_expire",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":865,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":711,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":710,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":709,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":712,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":856,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":862,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["name",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":986,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":807,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1161,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":684,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newcv",{"_index":1079,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newpermission",{"_index":969,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newregister",{"_index":1262,"title":{},"body":{"injectables/UsersService.html":{}}}],["newrole",{"_index":1146,"title":{},"body":{"injectables/RolesService.html":{}}}],["newuser",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser?._id",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["newuser?.createdat",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["next",{"_index":995,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["normal_user",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":381,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["ném",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":443,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["objectid",{"_index":506,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["objuser",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":988,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1176,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1177,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":600,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["overview",{"_index":1331,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":1300,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":336,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":391,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":883,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":678,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1160,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcompanydto",{"_index":1162,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1164,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1166,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1168,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1170,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1172,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["pass",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":832,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":833,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":503,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":335,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('permission",{"_index":938,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["patch(':id')@responsemessage('role",{"_index":1118,"title":{},"body":{"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":333,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{}}}],["patch()@responsemessage('update",{"_index":1206,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":866,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":908,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":904,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1081,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":276,"title":{"classes/Permission.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.dto",{"_index":943,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":535,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:12",{"_index":539,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:15",{"_index":540,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:6",{"_index":541,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:9",{"_index":538,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.name",{"_index":596,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":609,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":602,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":955,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.service",{"_index":942,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":591,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":924,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":44,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"index.html":{},"modules.html":{}}}],["permissionsservice",{"_index":941,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"index.html":{}}}],["pipe",{"_index":997,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["please",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["plugin",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1077,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":399,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('/login",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout')@responsemessage('logout",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1038,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('register",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":686,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":315,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["post()@responsemessage('permission",{"_index":927,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["post()@responsemessage('role",{"_index":1109,"title":{},"body":{"controllers/RolesController.html":{}}}],["prefix",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":868,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":971,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["promise",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":437,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1186,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":442,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["properties",{"_index":216,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["public",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/refresh')@responsemessage('get",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@get(':id')@responsemessage('get",{"_index":325,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["public()@get()@responsemessage('get",{"_index":321,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["public()@post('register')@responsemessage('register",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":672,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@useguards(localauthguard)@post('/login')@responsemessage('login",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":900,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1090,"title":{},"body":{"injectables/ResumesService.html":{}}}],["quantity",{"_index":486,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["query",{"_index":337,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":353,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["querystring",{"_index":320,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rauden@gmail.com",{"_index":653,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["recursive",{"_index":870,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1005,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":797,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(user",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":139,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["remove",{"_index":312,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":364,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["remove(id",{"_index":328,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":723,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["req",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.query.limit",{"_index":1212,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.query.page",{"_index":352,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["req.user",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":896,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["request.cookies[\"refresh_token",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.headers.authorization",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.user",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":878,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":462,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["required'})@isarray({message",{"_index":529,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["required'})@isboolean({message",{"_index":522,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["required'})@ismongoid({message",{"_index":566,"title":{},"body":{"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{}}}],["required'})@transform",{"_index":519,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["res",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{}}}],["reset",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["response",{"_index":125,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie(\"refresh_token",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":992,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"get",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"logout",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"message",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsemessage('create",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":350,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('login",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('permission",{"_index":945,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["responsemessage('permissions",{"_index":947,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["responsemessage('register",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('remove",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('role",{"_index":1123,"title":{},"body":{"controllers/RolesController.html":{}}}],["responsemessage('roles",{"_index":1125,"title":{},"body":{"controllers/RolesController.html":{}}}],["responsemessage('update",{"_index":359,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":687,"title":{},"body":{"controllers/FilesController.html":{}}}],["result",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1001,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":1045,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":544,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:12",{"_index":554,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:15",{"_index":553,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:18",{"_index":550,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:21",{"_index":552,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:26",{"_index":569,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:30",{"_index":567,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:34",{"_index":568,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:6",{"_index":551,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:9",{"_index":555,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.name",{"_index":1061,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1022,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1066,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1028,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1059,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1044,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1024,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1026,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":45,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"index.html":{},"modules.html":{}}}],["resumesservice",{"_index":1043,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"index.html":{}}}],["return",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":254,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1121,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":560,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:10",{"_index":561,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:14",{"_index":562,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:19",{"_index":565,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":563,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":597,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":610,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":603,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["rolemodule",{"_index":1230,"title":{},"body":{"injectables/UsersService.html":{}}}],["roles",{"_index":1107,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1134,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1120,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":593,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1105,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["rolesmodule",{"_index":46,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"index.html":{},"modules.html":{}}}],["rolesservice",{"_index":157,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"index.html":{}}}],["rxjs",{"_index":989,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":991,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["salary",{"_index":485,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["salt",{"_index":1251,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":886,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":615,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["schema",{"_index":374,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":454,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":458,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":750,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":923,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1025,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1104,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1196,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":371,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":774,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":956,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1060,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1135,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/user.schema",{"_index":1223,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":838,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":1078,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":974,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["server",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["setmetadata(is_public_key",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skill",{"_index":483,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["skills",{"_index":480,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["skip(offset",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["soft",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":377,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":398,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../company.schema.ts",{"_index":1348,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1349,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1350,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1351,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1352,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1353,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:46",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:64",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:116",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:12",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:98",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guard/jwt",{"_index":792,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/local",{"_index":840,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":823,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:19",{"_index":828,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:8",{"_index":826,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":842,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:14",{"_index":846,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":844,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":307,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:16",{"_index":317,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:24",{"_index":322,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:35",{"_index":326,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:41",{"_index":334,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:51",{"_index":330,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":368,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":375,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:13",{"_index":378,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:20",{"_index":380,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:30",{"_index":382,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:58",{"_index":383,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:66",{"_index":385,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:79",{"_index":384,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":507,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1159,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1020,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":432,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:10",{"_index":451,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:13",{"_index":438,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:16",{"_index":447,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:19",{"_index":450,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:22",{"_index":444,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:28",{"_index":453,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:34",{"_index":446,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:40",{"_index":440,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:43",{"_index":452,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:46",{"_index":449,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:49",{"_index":445,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.interceptor.ts",{"_index":984,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:20",{"_index":1156,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:25",{"_index":1158,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":580,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":587,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":598,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:14",{"_index":605,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:30",{"_index":607,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1144,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/decorator/customize.ts",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":514,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1163,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":660,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":662,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:16",{"_index":674,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:34",{"_index":665,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:39",{"_index":666,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:44",{"_index":669,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:49",{"_index":667,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":707,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":713,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":716,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":717,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":719,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":718,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":715,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":851,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:10",{"_index":861,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:14",{"_index":858,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:38",{"_index":855,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/jobs/dto/create",{"_index":459,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1165,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":752,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:14",{"_index":755,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:21",{"_index":756,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:32",{"_index":757,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:38",{"_index":760,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:48",{"_index":758,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":772,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":776,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:12",{"_index":778,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:19",{"_index":780,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:34",{"_index":781,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:62",{"_index":782,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:69",{"_index":784,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:82",{"_index":783,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1021,"title":{},"body":{"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":728,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:10",{"_index":740,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:13",{"_index":743,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:16",{"_index":729,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:23",{"_index":739,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:26",{"_index":742,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:29",{"_index":741,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:32",{"_index":738,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:35",{"_index":734,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:38",{"_index":744,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:41",{"_index":735,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:44",{"_index":736,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:48",{"_index":731,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:54",{"_index":746,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:60",{"_index":733,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:66",{"_index":730,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:69",{"_index":745,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:72",{"_index":737,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:75",{"_index":732,"title":{},"body":{"classes/Job.html":{}}}],["src/main.ts",{"_index":1292,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":534,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1167,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":925,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:16",{"_index":928,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:22",{"_index":931,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:32",{"_index":933,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:38",{"_index":940,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:44",{"_index":936,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":954,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":957,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":959,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:19",{"_index":960,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:35",{"_index":961,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:64",{"_index":962,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:70",{"_index":964,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:83",{"_index":963,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":592,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":911,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:10",{"_index":920,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:13",{"_index":912,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:16",{"_index":918,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:19",{"_index":919,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:24",{"_index":914,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:30",{"_index":922,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:36",{"_index":916,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:42",{"_index":913,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:45",{"_index":921,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:48",{"_index":917,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:51",{"_index":915,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":543,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1169,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1027,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:14",{"_index":1040,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:21",{"_index":1031,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:27",{"_index":1034,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:37",{"_index":1036,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:43",{"_index":1042,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:48",{"_index":1041,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1058,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1062,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1065,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:121",{"_index":1073,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:19",{"_index":1071,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:34",{"_index":1068,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:56",{"_index":1069,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:85",{"_index":1072,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:93",{"_index":1074,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1002,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:12",{"_index":1011,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:15",{"_index":1019,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:18",{"_index":1018,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:21",{"_index":1015,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:24",{"_index":1006,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:27",{"_index":1014,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:30",{"_index":1012,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:41",{"_index":1008,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:47",{"_index":1017,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:53",{"_index":1010,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:59",{"_index":1007,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:62",{"_index":1016,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:65",{"_index":1013,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:68",{"_index":1009,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":559,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1171,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1106,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:15",{"_index":1110,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:21",{"_index":1112,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:31",{"_index":1114,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:37",{"_index":1119,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:43",{"_index":1116,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1133,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["src/roles/roles.service.ts",{"_index":1136,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1138,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:20",{"_index":1139,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:34",{"_index":1140,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:63",{"_index":1141,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:74",{"_index":1143,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:87",{"_index":1142,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":594,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1092,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:11",{"_index":1100,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:14",{"_index":1097,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:17",{"_index":1098,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:20",{"_index":1101,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:24",{"_index":1094,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:30",{"_index":1103,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:36",{"_index":1096,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:42",{"_index":1093,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:45",{"_index":1102,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:48",{"_index":1099,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:51",{"_index":1095,"title":{},"body":{"classes/Role.html":{}}}],["src/users/dto/create",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1174,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":589,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1178,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:11",{"_index":1190,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:14",{"_index":1187,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:17",{"_index":1191,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:20",{"_index":1180,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:23",{"_index":1188,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:26",{"_index":1179,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:29",{"_index":1181,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:35",{"_index":1193,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:38",{"_index":1192,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:41",{"_index":1183,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:47",{"_index":1195,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:53",{"_index":1185,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:59",{"_index":1182,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:62",{"_index":1194,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:65",{"_index":1189,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:68",{"_index":1184,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1198,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:14",{"_index":1201,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":1202,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":1203,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1207,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:51",{"_index":1204,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["src/users/users.interface.ts",{"_index":726,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1221,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1224,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:125",{"_index":1234,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:137",{"_index":1236,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:145",{"_index":1239,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:149",{"_index":1242,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:162",{"_index":1241,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":1231,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":1244,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":1243,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:42",{"_index":1245,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:50",{"_index":1240,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:74",{"_index":1232,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:96",{"_index":1233,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":488,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["startdate",{"_index":490,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["statements",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":547,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":985,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":892,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":830,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":97,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["successfully",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["successfully')@useinterceptors(undefined",{"_index":673,"title":{},"body":{"controllers/FilesController.html":{}}}],["super",{"_index":812,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":817,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1335,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1336,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":874,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["system",{"_index":637,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["table",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":859,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["temp",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["temp.permissions",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["th",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["tham",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.login(req.user",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":848,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":349,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel.create",{"_index":394,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findbyid(id",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get(\"jwt_refresh_token_secret",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('should_init",{"_index":621,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":897,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":700,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":701,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":704,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":703,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(password",{"_index":1261,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jobmodel.create",{"_index":786,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filter",{"_index":788,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":787,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyid(id",{"_index":789,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":791,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":790,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":765,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":766,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":767,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":769,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":768,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":657,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.count",{"_index":626,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":970,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter",{"_index":973,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":972,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select(\"_id",{"_index":632,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findbyid(id",{"_index":975,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.findone",{"_index":966,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":630,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":977,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":976,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":946,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":948,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":949,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":951,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":950,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1000,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":814,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel.create",{"_index":1080,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find",{"_index":1076,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter",{"_index":1085,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1084,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid(id",{"_index":1087,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1091,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1089,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercv",{"_index":1050,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1051,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyusers(user",{"_index":1049,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1052,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1055,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1054,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel.count",{"_index":628,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1147,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter",{"_index":1149,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1148,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1150,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":639,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["this.rolemodel.insertmany",{"_index":633,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1155,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1151,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodule.findone",{"_index":1259,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.findone(userrole._id",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1124,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1126,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1127,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1129,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1128,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.usermodel.count",{"_index":624,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1263,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter",{"_index":1265,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1264,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1271,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1254,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":640,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1274,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1255,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword(this.configservice.get('init_password",{"_index":643,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1211,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1213,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1214,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(pass",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(user",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1217,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1216,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["timestamps",{"_index":456,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["token",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["total",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["transfer",{"_index":501,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["transform",{"_index":467,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["transformer",{"_index":468,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":993,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["trying",{"_index":889,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["type",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1346,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":747,"title":{},"body":{"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["unauthorizedexception",{"_index":806,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"username",{"_index":849,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"you",{"_index":821,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["undefined",{"_index":1004,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unknown",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1342,"title":{},"body":{"properties.html":{}}}],["update",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1215,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":702,"title":{},"body":{"controllers/FilesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["update(id",{"_index":331,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updateuserdto",{"_index":1205,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateat",{"_index":1082,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updateby",{"_index":1083,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updatecompanydto",{"_index":332,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updated",{"_index":939,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["updatedat",{"_index":436,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":668,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":759,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":937,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresume",{"_index":1088,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updateresumedto",{"_index":1046,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1117,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":722,"title":{},"body":{"injectables/FilesService.html":{}}}],["updateuserdto",{"_index":1173,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1268,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusertoken",{"_index":1227,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":677,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":664,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(@uploadedfile",{"_index":689,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":670,"title":{},"body":{"controllers/FilesController.html":{}}}],["uri",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":548,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["use",{"_index":1257,"title":{},"body":{"injectables/UsersService.html":{}}}],["useclass",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{}}}],["usefactory",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":676,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":688,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":115,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@responsemessage('get",{"_index":1039,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user's",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["user._id",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":495,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":496,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:13",{"_index":497,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:19",{"_index":576,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":574,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":577,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:29",{"_index":571,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:32",{"_index":575,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":570,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:39",{"_index":578,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":572,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:51",{"_index":982,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:55",{"_index":980,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:58",{"_index":983,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:61",{"_index":979,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:64",{"_index":981,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:67",{"_index":978,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:7",{"_index":1175,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":396,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":595,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/candidate",{"_index":636,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":614,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdecorator",{"_index":392,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["userdocument",{"_index":611,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":549,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["usermodel",{"_index":606,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["username/pass",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrole",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":655,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":1199,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1222,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1209,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1208,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":590,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1197,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":604,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":47,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{}}}],["usersservice",{"_index":224,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["v",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":824,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":827,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":845,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":476,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validateuser",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":477,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1354,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1338,"title":{},"body":{"properties.html":{}}}],["vietnam",{"_index":646,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viện",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["void",{"_index":860,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["without",{"_index":906,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["world",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["you're",{"_index":888,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["zoom",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["zoro",{"_index":648,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["zoro@gmail.com",{"_index":649,"title":{},"body":{"injectables/DatabasesService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get, Render, Post, UseGuards, Request } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService\n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        }\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n\n    UsersModule,  // import UsersModule\n\n    AuthModule,  // import AuthModule\n\n    CompaniesModule, // import CompaniesModule\n\n    JobsModule, // import JobsModule\n\n    FilesModule, // import FilesModule\n\n    ResumesModule, // import ResumesModule\n\n    PermissionsModule,  // import PermissionsModule\n\n    RolesModule, // import RolesModule\n    DatabasesModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // {\n    //   provide: APP_GUARD,\n    //   useClass: JwtAuthGuard,\n    // },\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n\n    // model: code\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/account')@ResponseMessage('Get user information success')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@Post('/login')@ResponseMessage('Login successfully')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/logout')@ResponseMessage('Logout User')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/refresh')@ResponseMessage('Get user by refresh token')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ResponseMessage('Register a new user success')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, Res, UseGuards } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\nimport { Public, ResponseMessage, User } from \"src/decorator/customize\";\nimport { LocalAuthGuard } from \"./guard/local-auth.guard\";\nimport { JwtAuthGuard } from \"./guard/jwt-auth.guard\";\nimport { RegisterUserDto } from \"src/users/dto/create-user.dto\";\nimport { Request, Response } from \"express\";\nimport { IUser } from \"src/users/users.interface\";\nimport { RolesService } from \"src/roles/roles.service\";\n\n\n@Controller(\"auth\")\nexport class AuthController {\n    constructor(\n        private authService: AuthService,\n        private roleService: RolesService\n    ) { }\n\n    @Post('/logout')\n    @ResponseMessage(\"Logout User\")\n    handleLogout(\n        @Res({ passthrough: true }) response: Response,\n        @User() user: IUser\n    ) {\n        return this.authService.logout(response, user);\n    }\n\n    // @Public()\n    // @Get('/refresh')\n    // @ResponseMessage(\"Get user by refresh token\")\n    // handleRefreshToken(@Req() request: Request, @Res({ passthrough: true }) response: Response) { // req.user\n    //     const refreshToken = request.cookies[\"refresh_token\"];\n    //     return this.authService.processNewToken(refreshToken, response);\n    // }\n\n    @Public()\n    @Get('/refresh')\n    @ResponseMessage(\"Get user by refresh token\")\n    handleRefreshToken(@Req() request: Request, @Res({ passthrough: true }) response: Response) { // req.user\n        const refreshToken = request.headers.authorization;\n        return this.authService.processNewToken(refreshToken, response);\n    }\n\n    @Get('/account')\n    @ResponseMessage(\"Get user information success\")\n    async handleGetAccount(@User() user: IUser) { // req.user\n        const temp = await this.roleService.findOne(user.role._id) as any; // disable check type\n        user.permissions = temp.permissions;\n        return { user }\n    }\n\n    @Public()\n    @Post('register')\n    @ResponseMessage('Register a new user success')\n    handleRegister(@Body() registerUserDto: RegisterUserDto) {\n        return this.authService.register(registerUserDto);\n    }\n\n\n    @Public()\n    @UseGuards(LocalAuthGuard)\n    @Post('/login')\n    @ResponseMessage('Login successfully')\n    handleLogin(\n        @Req() req,\n        @Res({ passthrough: true }) response: Response) {\n        return this.authService.login(req.user, response);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\n@Module({\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser, response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/users.interface';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms';\nimport { Response } from \"express\";\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private jwtService: JwtService,\n        private configService: ConfigService,\n        private roleService: RolesService\n    ) { }\n\n    logout = async (response: Response, user: IUser) => {\n        await this.usersService.updateUserToken(\"\", user._id);\n        response.clearCookie(\"refresh_token\");\n        return \"OK\"\n    }\n\n    processNewToken = async (refreshToken: string, response: Response) => {\n        try {\n            this.jwtService.verify(refreshToken, {\n                secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\")\n            })\n\n            let user = await this.usersService.findUserByToken(refreshToken);\n            if (user) {\n                // update refresh token\n                const { _id, name, email, role } = user;\n                const payload = {\n                    sub: \"token refresh\",\n                    iss: \"from server\",\n                    _id,\n                    name,\n                    email,\n                    role\n                }\n\n                const refresh_token = this.createRefreshToken(payload);\n\n                // update user with refresh token\n                response.clearCookie(\"refresh_token\");\n                await this.usersService.updateUserToken(refresh_token, _id.toString())\n\n                // fetch user's role\n                const userRole = user.role as unknown as { _id: string, name: string };\n                const temp = await this.roleService.findOne(userRole._id);\n\n                // set refresh_token as cookies\n                // response.cookie('refresh_token', refresh_token, {\n                //     httpOnly: true,\n                //     maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE'))\n                // })\n\n                return {\n                    access_token: this.jwtService.sign(payload),\n                    refreshToken: refresh_token,\n                    user: {\n                        _id,\n                        name,\n                        email,\n                        role,\n                        permission: temp?.permissions ?? []\n                    }\n                };\n\n            } else {\n                throw new BadRequestException(`Invalid refresh token. Please login!`)\n            }\n        } catch (error) {\n            throw new BadRequestException(`Invalid refresh token. Please login!`)\n        }\n    }\n\n    createRefreshToken = (payload: any) => {\n        const refreshToken = this.jwtService.sign(payload, {\n            secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\"),\n            expiresIn: ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000,\n        })\n        return refreshToken;\n    }\n\n    async register(user: RegisterUserDto) {\n        let newUser = await this.usersService.register(user)\n        return {\n            _id: newUser?._id,\n            createdAt: newUser?.createdAt\n        }\n    }\n\n    // username/pass là 2 tham số thư viện passport ném về\n    async validateUser(username: string, pass: string): Promise {\n        const user = await this.usersService.findOneByUsername(username);\n        if (user) {\n            const isValid = this.usersService.isValidPassword(pass, user.password);\n            if (isValid === true) {\n                const userRole = user.role as unknown as { _id: string, name: string };\n                const temp = await this.roleService.findOne(userRole._id);\n\n                const objUser = {\n                    ...user.toObject(),\n                    permissions: temp?.permissions ?? [],\n                }\n                return objUser;\n            }\n        }\n        return null;\n    }\n\n    async login(user: IUser, response: Response) {\n        const { _id, name, email, role, permissions } = user;\n        const payload = {\n            sub: \"token login\",\n            iss: \"from server\",\n            _id,\n            name,\n            email,\n            role\n        }\n\n        const refresh_token = this.createRefreshToken(payload);\n\n        // update user with refresh token --> update in usersService\n        await this.usersService.updateUserToken(refresh_token, _id)\n\n        // set refresh_token as cookies\n        // response.cookie('refresh_token', refresh_token, {\n        //     httpOnly: true,\n        //     maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE'))\n        // })\n\n        return {\n            access_token: this.jwtService.sign(payload),\n            refresh_token: refresh_token,\n            user: {\n                _id,\n                name,\n                email,\n                role,\n                permissions\n            }\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new company successfully')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Get all companies successfully')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Get a company successfully')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Remove a company successfully')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a company successfully')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCompanyDto\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) { }\n\n\n  // name, address, description\n  @Post()\n  @ResponseMessage('Create a new company successfully')\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n\n  @Public()\n  @Get()\n  @ResponseMessage('Get all companies successfully')\n  findAll(\n    @Query('current') currentPage: string, // const currentPage: string = req.query.page\n    @Query('pageSize') limit: string,\n    @Query() queryString: string\n  ) {\n    return this.companiesService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Get a company successfully')\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a company successfully')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Remove a company successfully')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }])],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n  // exports: [CompaniesService]\n})\nexport class CompaniesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCompanyDto\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose/dist/soft-delete-model';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { User as UserDecorator } from 'src/decorator/customize';\n\n@Injectable()\nexport class CompaniesService {\n\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel\n  ) { }\n\n  async create(createCompanyDto: CreateCompanyDto, @UserDecorator() user: IUser) {\n    return await this.companyModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n  }\n\n  async findAll(currentPage: number, limit: number, queryString: string) {\n    const { filter, sort, population } = aqp(queryString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.companyModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not found company with id: ${id}`);\n    }\n\n    return this.companyModel.findById(id);\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, @UserDecorator() user: IUser) {\n    return await this.companyModel.updateOne(\n      { _id: id },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n  }\n\n  async remove(id: string, @UserDecorator() user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not found company with id: ${id}`);\n    }\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return this.companyModel.softDelete({ _id: id })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    address: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    logo: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '_id is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: Company's logo is required})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: Company's name is required})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from \"class-transformer\";\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nclass Company {\n    @IsNotEmpty({ message: '_id is required' })\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: `Company's name is required` })\n    name: string;\n\n    @IsNotEmpty({ message: `Company's logo is required` })\n    logo: string;\n}\n\n\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skills is required' })\n    @IsArray({ message: 'Skills must be an array' })\n    @IsString({ each: true, message: 'Each skill must be a string' })\n    skills: string[];\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n    @IsNotEmpty({ message: 'Location is required' })\n    location: string;\n\n    @IsNotEmpty({ message: 'Salary is required' })\n    salary: number;\n\n    @IsNotEmpty({ message: 'Quantity is required' })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'Level is required' })\n    level: string;\n\n    @IsNotEmpty({ message: 'Description is required' })\n    description: string;\n\n    @IsNotEmpty({ message: 'Start date is required' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'Start date must be a date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'End date is required' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'End date must be a date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'Is active is required' })\n    @IsBoolean({ message: 'Is active must be a boolean' })\n    isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\n// data transfer object\n\nclass Company {\n\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsEmail()\n    @IsNotEmpty({ message: 'Email is required' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password is required' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age is required' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender is required' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address is required' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role is required' })\n    @IsMongoId({ message: 'Role is must be a ObjectId' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsEmail()\n    @IsNotEmpty({ message: 'Email is required' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password is required' })\n    password: string;\n\n    // @IsNotEmpty({ message: 'Age is required' })\n    age: number;\n\n    // @IsNotEmpty({ message: 'Gender is required' })\n    gender: string;\n\n    // @IsNotEmpty({ message: 'Address is required' })\n    address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from \"class-validator\";\n\n// data transfer object\nexport class CreateCompanyDto {\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Address is required' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Description is required' })\n    description: string;\n\n    @IsNotEmpty({ message: 'Logo is required' })\n    logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'End date is required'})@Transform( => )@IsDate({message: 'End date must be a date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Is active is required'})@IsBoolean({message: 'Is active must be a boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Location is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Quantity is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Salary is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills is required'})@IsArray({message: 'Skills must be an array'})@IsString({each: true, message: 'Each skill must be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Start date is required'})@Transform( => )@IsDate({message: 'Start date must be a date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from \"class-transformer\";\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nclass Company {\n    @IsNotEmpty({ message: '_id is required' })\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: `Company's name is required` })\n    name: string;\n\n    @IsNotEmpty({ message: `Company's logo is required` })\n    logo: string;\n}\n\n\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skills is required' })\n    @IsArray({ message: 'Skills must be an array' })\n    @IsString({ each: true, message: 'Each skill must be a string' })\n    skills: string[];\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n    @IsNotEmpty({ message: 'Location is required' })\n    location: string;\n\n    @IsNotEmpty({ message: 'Salary is required' })\n    salary: number;\n\n    @IsNotEmpty({ message: 'Quantity is required' })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'Level is required' })\n    level: string;\n\n    @IsNotEmpty({ message: 'Description is required' })\n    description: string;\n\n    @IsNotEmpty({ message: 'Start date is required' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'Start date must be a date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'End date is required' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'End date must be a date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'Is active is required' })\n    @IsBoolean({ message: 'Is active must be a boolean' })\n    isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'ApiPath is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Method is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Module is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\n\nexport class CreatePermissionDto {\n\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsNotEmpty({ message: 'ApiPath is required' })\n    apiPath: string;\n\n    @IsNotEmpty({ message: 'Method is required' })\n    method: string;\n\n    @IsNotEmpty({ message: 'Module is required' })\n    module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'CompanyId is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'JobId is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Status is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Url is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'UserId is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateResumeDto {\n    @IsNotEmpty({ message: 'Email is required' })\n    email: string;\n\n    @IsNotEmpty({ message: 'UserId is required' })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'Url is required' })\n    url: string;\n\n    @IsNotEmpty({ message: 'Status is required' })\n    status: string;\n\n    @IsNotEmpty({ message: 'CompanyId is required' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'JobId is required' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'Url is required' })\n    url: string;\n\n    @IsNotEmpty({ message: 'CompanyId is required' })\n    @IsMongoId({ message: 'companyId is a mongoId' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'JobId is required' })\n    @IsMongoId({ message: 'jobId is a mongoId' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'IsActive is required'})@IsBoolean({message: 'IsActive must be a boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Permissions is required'})@IsArray({message: 'Permissions must be an array'})@IsMongoId({each: true, message: 'Each permission must be a mongoId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateRoleDto {\n\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Description is required' })\n    description: string;\n\n    @IsNotEmpty({ message: 'IsActive is required' })\n    @IsBoolean({ message: 'IsActive must be a boolean' })\n    isActive: boolean;\n\n    @IsNotEmpty({ message: 'Permissions is required' })\n    @IsArray({ message: 'Permissions must be an array' })\n    @IsMongoId({ each: true, message: 'Each permission must be a mongoId' })\n    permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'CompanyId is required'})@IsMongoId({message: 'companyId is a mongoId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'JobId is required'})@IsMongoId({message: 'jobId is a mongoId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Url is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateResumeDto {\n    @IsNotEmpty({ message: 'Email is required' })\n    email: string;\n\n    @IsNotEmpty({ message: 'UserId is required' })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'Url is required' })\n    url: string;\n\n    @IsNotEmpty({ message: 'Status is required' })\n    status: string;\n\n    @IsNotEmpty({ message: 'CompanyId is required' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'JobId is required' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'Url is required' })\n    url: string;\n\n    @IsNotEmpty({ message: 'CompanyId is required' })\n    @IsMongoId({ message: 'companyId is a mongoId' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'JobId is required' })\n    @IsMongoId({ message: 'jobId is a mongoId' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty({message: 'Email is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role is required'})@IsMongoId({message: 'Role is must be a ObjectId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\n// data transfer object\n\nclass Company {\n\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsEmail()\n    @IsNotEmpty({ message: 'Email is required' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password is required' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age is required' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender is required' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address is required' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role is required' })\n    @IsMongoId({ message: 'Role is must be a ObjectId' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsEmail()\n    @IsNotEmpty({ message: 'Email is required' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password is required' })\n    password: string;\n\n    // @IsNotEmpty({ message: 'Age is required' })\n    age: number;\n\n    // @IsNotEmpty({ message: 'Gender is required' })\n    gender: string;\n\n    // @IsNotEmpty({ message: 'Address is required' })\n    address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User } from 'src/users/schemas/user.schema';\nimport { UserSchema } from 'src/users/schemas/user.schema';\nimport { Permission, PermissionSchema } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ])\n  ],\n})\nexport class DatabasesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/databases/databases.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n\n    private readonly logger = new Logger(DatabasesService.name);\n\n    constructor(\n        @InjectModel(User.name)\n        private userModel: SoftDeleteModel,\n\n        @InjectModel(Permission.name)\n        private permissionModel: SoftDeleteModel,\n\n        @InjectModel(Role.name)\n        private roleModel: SoftDeleteModel,\n\n        private configService: ConfigService,\n        private userService: UsersService\n    ) { }\n\n    async onModuleInit() {\n        const isInit = this.configService.get('SHOULD_INIT');\n        if (Boolean(isInit)) {\n\n            const countUser = await this.userModel.count({});\n            const countPermission = await this.permissionModel.count({});\n            const countRole = await this.roleModel.count({});\n\n            // create permission\n            if (countPermission === 0) {\n                await this.permissionModel.insertMany(INIT_PERMISSIONS); // bulk create \n            }\n\n            // create role\n            if (countRole === 0) {\n                const permissions = await this.permissionModel.find({}).select(\"_id\");\n                await this.roleModel.insertMany([ // bulk create \n                    {\n                        name: ADMIN_ROLE,\n                        description: \"Admin has full permissions\",\n                        isActive: true,\n                        permissions: permissions\n                    },\n                    {\n                        name: USER_ROLE,\n                        description: \"User/Candidate in system\",\n                        isActive: true,\n                        permissions: [] // not set permission, just create role\n                    },\n                ]);\n            }\n\n            // create user\n            if (countUser === 0) {\n                const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n                const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n                await this.userModel.insertMany([   // bulk create\n                    {\n                        name: \"Luffy\",\n                        email: \"admin@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get('INIT_PASSWORD')),\n                        age: 20,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id,\n                    },\n                    {\n                        name: \"Zoro\",\n                        email: \"zoro@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get('INIT_PASSWORD')),\n                        age: 24,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id,\n                    },\n                    {\n                        name: \"Black Beard\",\n                        email: \"rauden@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get('INIT_PASSWORD')),\n                        age: 55,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: userRole?._id,\n                    },\n                ])\n            }\n\n            // check isCreate sample data\n            if (countUser > 0 && countPermission > 0 && countRole > 0) {\n                this.logger.log(\"==> Already init sample data\");\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFileDto\n                                    \n                                                UpdateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload file successfully')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { fileName: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseInterceptors, UploadedFile, ParseFilePipeBuilder, HttpStatus, Res } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\n\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) { }\n\n  @Public()\n  @Post('upload')\n  @ResponseMessage('Upload file successfully')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(@UploadedFile(\n    new ParseFilePipeBuilder()\n      .addFileTypeValidator({\n        fileType: /^(jpg|jpeg|image\\/jpeg|png|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain)$/i,\n      })\n      .addMaxSizeValidator({\n        maxSize: 1024 * 1024\n      })\n      .build({\n        errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY\n      }),\n  ) file: Express.Multer.File) {\n    return {\n      fileName: file.filename,\n    }\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    })\n  ],\n  controllers: [FilesController],\n  providers: [FilesService]\n})\nexport class FilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFileDto\n                                    \n                                                CreateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFileDto\n                                    \n                                                UpdateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n    _id: string;\n    name: string;\n    email: string;\n    role: {\n        _id: string;\n        name: string;\n    };\n    permissions?: {\n        _id: string;\n        name: string,\n        apiPath: string,\n        module: string\n    }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, Types } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string;\n        logo: string;\n    };\n\n    @Prop()\n    location: string;\n\n    @Prop()\n    salary: number;\n\n    @Prop()\n    quantity: number;\n\n    @Prop()\n    level: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    startDate: Date;\n\n    @Prop()\n    endDate: Date;\n\n    @Prop()\n    isActive: boolean;\n\n    // \n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job successfully')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Get all jobs successfully')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Get a job successfully')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Remove a job successfully')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a job successfully')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Res, Query } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) { }\n\n  @Post()\n  @ResponseMessage('Create a new job successfully')\n  create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Public()\n  @Get()\n  @ResponseMessage('Get all jobs successfully')\n  findAll(\n    @Query('current') currentPage: string, // const currentPage: string = req.query.page\n    @Query('pageSize') limit: string,\n    @Query() queryString: string\n  ) {\n    return this.jobsService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Get a job successfully')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a job successfully')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser\n  ) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Remove a job successfully')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService]\n})\nexport class JobsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport { IUser } from 'src/users/users.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel\n  ) { }\n\n\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    const {\n      name, skills, company, location, salary,\n      quantity, level, description, startDate, endDate, isActive\n    } = createJobDto;\n    return await this.jobModel.create({\n      name, skills, company, location, salary,\n      quantity, level, description, startDate, endDate, isActive,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, queryString: string) {\n    const { filter, sort, population } = aqp(queryString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.jobModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found job';\n    }\n    return this.jobModel.findById(id);\n  }\n\n  async update(id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    return await this.jobModel.updateOne(\n      { _id: id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found job';\n    }\n\n    await this.jobModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n\n    return this.jobModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt-auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guard/jwt-auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guard/jwt-auth.guard.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    ExecutionContext,\n    Injectable,\n    UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n    constructor(private reflector: Reflector) {\n        super();\n    }\n    canActivate(context: ExecutionContext) {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            return true;\n        }\n        return super.canActivate(context);\n    }\n\n    handleRequest(err, user, info) {\n        // You can throw an exception based on either \"info\" or \"err\" arguments\n        if (err || !user) {\n            throw err || new UnauthorizedException(\"You don't have permission\");\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        private configService: ConfigService\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: configService.get(\"JWT_ACCESS_TOKEN_SECRET\"),\n        });\n    }\n\n    async validate(payload: IUser) {\n        const { _id, name, email, role } = payload;\n        // req.user\n        return {\n            _id,\n            name,\n            email,\n            role\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        private authService: AuthService\n    ) {\n        super();\n    }\n\n    async validate(username: string, password: string): Promise {\n        const user = await this.authService.validateUser(username, password);\n        if (!user) {\n            throw new UnauthorizedException(\"username or password invalid\");\n        }\n        return user; // req.user\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer.config.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer.config.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetDirectory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MulterModuleOptions, MulterOptionsFactory } from \"@nestjs/platform-express\";\nimport fs from 'fs';\nimport { diskStorage } from \"multer\";\nimport path, { join } from \"path\";\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n\n    getRootPath = () => {\n        return process.cwd();\n    };\n\n    ensureExists(targetDirectory: string) {\n        fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n            if (!error) {\n                console.log('Directory successfully created, or it already exists.');\n                return;\n            }\n            switch (error.code) {\n                case 'EEXIST':\n                    // Error:\n                    // Requested location already exists, but it's not a directory.\n                    break;\n                case 'ENOTDIR':\n                    // Error:\n                    // The parent hierarchy contains a file with the same name as the dir\n                    // you're trying to create.\n                    break;\n                default:\n                    // Some other error like permission denied.\n                    console.error(error);\n                    break;\n            }\n        });\n    }\n\n    createMulterOptions(): MulterModuleOptions {\n        return {\n            storage: diskStorage({\n                destination: (req, file, cb) => {\n                    const folder = req?.headers?.folder_type ?? \"default\";\n                    this.ensureExists(`public/images/${folder}`);\n                    cb(null, join(this.getRootPath(), `public/images/${folder}`))\n                },\n                filename: (req, file, cb) => {\n                    //get image extension\n                    let extName = path.extname(file.originalname);\n                    //get image's name (without extension)\n                    let baseName = path.basename(file.originalname, extName);\n                    let finalName = `${baseName}-${Date.now()}${extName}`\n                    cb(null, finalName)\n                }\n            })\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, Types } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    apiPath: string;\n\n    @Prop()\n    method: string;\n\n    @Prop()\n    module: string;\n\n\n    // \n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Permission created successfully')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPermissionDto\n                                    \n                                                CreatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Permissions fetched successfully')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Permission fetched successfully')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Permission deleted successfully')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Permission updated successfully')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePermissionDto\n                                    \n                                                UpdatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Res, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n\n// name, apiPath, method, module\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) { }\n\n  @Post()\n  @ResponseMessage('Permission created successfully')\n  create(@Body() createPermissionDto: CreatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Permissions fetched successfully')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() queryString: string\n  ) {\n    return this.permissionsService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Permission fetched successfully')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Permission updated successfully')\n  update(@Param('id') id: string, @Body() updatePermissionDto: UpdatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Permission deleted successfully')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }])],\n  controllers: [PermissionsController],\n  providers: [PermissionsService]\n})\nexport class PermissionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPermissionDto\n                                    \n                                                CreatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePermissionDto\n                                    \n                                                UpdatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel\n  ) { }\n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const { name, apiPath, method, module } = createPermissionDto;\n    const isExist = await this.permissionModel.findOne({ apiPath, method });\n    if (isExist) {\n      throw new BadRequestException(`Permission with apiPath: ${apiPath} and method: ${method} is already exist`);\n    }\n    const newPermission = await this.permissionModel.create({\n      name, apiPath, method, module,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return newPermission;\n  }\n\n  async findAll(currentPage: number, limit: number, queryString: string) {\n    const { filter, sort, population, projection } = aqp(queryString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.permissionModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      throw new BadRequestException(`Not found permission with id: ${id}`);\n    return await this.permissionModel.findById(id);\n  }\n\n  async update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not found permission with id: ${id}`);\n    }\n    return await this.permissionModel.updateOne({ _id: id }, {\n      ...updatePermissionDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not found permission with id: ${id}`);\n    }\n\n    await this.permissionModel.updateOne({ _id: id }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return this.permissionModel.softDelete({ _id: id })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty({message: 'Email is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\n// data transfer object\n\nclass Company {\n\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsEmail()\n    @IsNotEmpty({ message: 'Email is required' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password is required' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age is required' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender is required' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address is required' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role is required' })\n    @IsMongoId({ message: 'Role is must be a ObjectId' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n\n    @IsNotEmpty({ message: 'Name is required' })\n    name: string;\n\n    @IsEmail()\n    @IsNotEmpty({ message: 'Email is required' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password is required' })\n    password: string;\n\n    // @IsNotEmpty({ message: 'Age is required' })\n    age: number;\n\n    // @IsNotEmpty({ message: 'Gender is required' })\n    gender: string;\n\n    // @IsNotEmpty({ message: 'Address is required' })\n    address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n\n    constructor(private reflector: Reflector) {\n    }\n\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                    data: data\n                })),\n            );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, Types } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n\n    @Prop()\n    email: string;\n\n    @Prop()\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    status: string;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n    jobId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.Array })\n    history: {\n        status: string,\n        updatedAt: Date,\n        updatedBy: {\n            _id: mongoose.Schema.Types.ObjectId,\n            email: string\n        };\n    }[]\n\n    // \n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getResumesByUser\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserCv: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('create resume success')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserCv\n                                    \n                                                CreateUserCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('get all resume success')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('get resume success')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getResumesByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResumesByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('get all resume by user success')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('update resume success')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) { }\n\n  @Post('by-user')\n  @ResponseMessage('get all resume by user success')\n  getResumesByUser(@User() user: IUser) {\n    return this.resumesService.findByUsers(user);\n  }\n\n\n  @Post()\n  @ResponseMessage('create resume success')\n  create(@Body() createUserCv: CreateUserCvDto, @User() user: IUser) {\n    return this.resumesService.create(createUserCv, user);\n  }\n\n  @Get()\n  @ResponseMessage('get all resume success')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() queryString: string\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Get(':id')\n  @ResponseMessage('get resume success')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('update resume success')\n  update(@Param('id') id: string, @Body(\"status\") status: string, @User() user: IUser) {\n    return this.resumesService.update(id, status, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }])],\n  controllers: [ResumesController],\n  providers: [ResumesService]\n})\nexport class ResumesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsers\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserCvDto\n                                    \n                                                CreateUserCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsers(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class ResumesService {\n\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel\n  ) { }\n\n  async findByUsers(user: IUser) {\n    return await this.resumeModel.find({ userId: user._id })\n      .sort(\"-createdAt\")\n      .populate([\n        {\n          path: \"companyId\", // join \n          select: { name: 1 }\n        },\n        {\n          path: \"jobId\", // join\n          select: { name: 1 }\n        }\n      ]);\n  }\n\n  async create(createUserCvDto: CreateUserCvDto, user: IUser) {\n    const { url, companyId, jobId } = createUserCvDto;\n    const { email, _id } = user;\n\n    const newCv = await this.resumeModel.create({\n      url, companyId, jobId, email, userId: _id,\n      status: \"PENDING\",\n      createdBy: { _id, email },\n      history: [\n        {\n          status: \"PENDING\",\n          updateAt: new Date,\n          updateBy: {\n            _id: user._id,\n            email: user.email\n          }\n        }\n      ]\n    })\n    return newCv;\n  }\n\n  async findAll(currentPage: number, limit: number, queryString: string) {\n    const { filter, sort, population, projection } = aqp(queryString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.resumeModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Not found resume');\n    }\n\n    return await this.resumeModel.findById(id);\n  }\n\n  async update(id: string, status: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Not found resume');\n    }\n\n    const updateResume = await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        $push: {\n          history: {\n            status: status,\n            updateAt: new Date,\n            updateBy: {\n              _id: user._id,\n              email: user.email\n            }\n          }\n        }\n      });\n\n    return updateResume;\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Not found resume');\n    }\n\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n\n    return this.resumeModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, Types } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n    permissions: Permission[];\n\n    // \n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Role created successfully')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Roles fetched successfully')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Role fetched successfully')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Role deleted successfully')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Role updated successfully')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoleDto\n                                    \n                                                UpdateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) { }\n\n  @Post()\n  @ResponseMessage('Role created successfully')\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Roles fetched successfully')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() queryString: string\n  ) {\n    return this.rolesService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Role fetched successfully')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Role updated successfully')\n  update(@Param('id') id: string, @Body() updateRoleDto: UpdateRoleDto, @User() user: IUser) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Role deleted successfully')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService]\n})\nexport class RolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoleDto\n                                    \n                                                UpdateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel\n  ) { }\n\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { name, description, isActive, permissions } = createRoleDto;\n    const isExist = await this.roleModel.findOne({ name });\n    if (isExist) throw new BadRequestException(`Role ${name} is exist`);\n    const newRole = await this.roleModel.create({\n      name, description, isActive, permissions,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return newRole;\n  }\n\n  async findAll(currentPage: number, limit: number, queryString: string) {\n    const { filter, sort, population, projection } = aqp(queryString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.roleModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not found role with id: ${id}`)\n    }\n    return await this.roleModel.findById(id)\n      .populate({\n        path: \"permissions\",\n        select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 }\n      });\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not found role with id: ${id}`)\n    }\n    return await this.roleModel.updateOne({ _id: id }, {\n      ...updateRoleDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not found role with id: ${id}`)\n    }\n\n    const foundRole = await this.roleModel.findById(id);\n    if (foundRole.name === ADMIN_ROLE) throw new BadRequestException(`Can not delete role ADMIN`);\n    await this.roleModel.updateOne({ _id: id }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n\n    return this.roleModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/transform.interceptor.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n\n    constructor(private reflector: Reflector) {\n    }\n\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                    data: data\n                })),\n            );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '_id is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, [\"password\"] as const) {\n    @IsNotEmpty({ message: '_id is required' })\n    _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n\n    @Prop()\n    name: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    password: string;\n\n    @Prop()\n    age: number;\n\n    @Prop()\n    gender: string;\n\n    @Prop()\n    address: string;\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string\n    }\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    refreshToken: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new user success')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Get all user success')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Get a user success')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Remove a user success')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a user success')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @Post()\n  @ResponseMessage('Create a new user success')\n  async create(\n    @Body() createUserDto: CreateUserDto,\n    @User() user: IUser) {\n    let newUSer = await this.usersService.create(createUserDto, user);\n    return {\n      _id: newUSer?._id,\n      createdAt: newUSer?.createdAt\n    };\n  }\n\n  @Get()\n  @ResponseMessage('Get all user success')\n  findAll(\n    @Query('current') currentPage: string, // const currentPage: string = req.query.page\n    @Query('pageSize') limit: string,      // const limit: string = req.query.limit\n    @Query() queryString: string\n  ) {\n    return this.usersService.findAll(+currentPage, +limit, queryString);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Get a user success')\n  async findOne(@Param('id') id: string) {\n    return await this.usersService.findOne(id);\n  }\n\n\n  @Patch()\n  @ResponseMessage('Update a user success')\n  async update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n    return await this.usersService.update(updateUserDto, user);\n  }\n\n\n  @Delete(':id')\n  @ResponseMessage('Remove a user success')\n  async remove(\n    @Param('id') id: string,\n    @User() user: IUser) {\n    return await this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    { name: User.name, schema: UserSchema },\n    { name: Role.name, schema: RoleSchema }\n  ])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModule: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModule\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as UserModel, UserDocument } from './schemas/user.schema';\nimport mongoose, { Model } from 'mongoose';\nimport { genSaltSync, hashSync, compareSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose/dist/soft-delete-model';\nimport { IUser } from './users.interface';\nimport aqp from 'api-query-params';\nimport { User as UserDecorator } from 'src/decorator/customize';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\n\n\n@Injectable()\nexport class UsersService {\n\n  constructor(\n    @InjectModel(UserModel.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModule: SoftDeleteModel\n  ) { }\n\n  getHashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    const hash = hashSync(password, salt);\n    return hash;\n  }\n\n  findUserByToken = async (refreshToken: string) => {\n    return await this.userModel.findOne(\n      { refreshToken }\n    ).populate({\n      path: \"role\",\n      select: { name: 1 }\n    });\n  }\n\n  updateUserToken = async (refreshToken: string, _id: string) => {\n    return await this.userModel.updateOne(\n      { _id },\n      { refreshToken }\n    )\n  }\n\n  // name , email , password, age, gender, address\n  async register(user: RegisterUserDto) {\n    const { name, email, password, age, gender, address } = user;\n    // check email\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email: ${email} already exists in the system. Please use another email!`)\n    }\n\n    // fetch user role\n    const userRole = await this.roleModule.findOne({ name: USER_ROLE });\n\n    const hashPassword = this.getHashPassword(password);\n    let newRegister = await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      age,\n      gender,\n      address,\n      role: userRole?._id\n    })\n    return newRegister;\n  }\n\n  async create(createUserDto: CreateUserDto, @UserDecorator() user: IUser) {\n\n    const { name, email, password, age,\n      gender, address, role, company } = createUserDto;\n    // check email\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email: ${email} already exists in the system. Please use another email!`)\n    }\n    const hashPassword = this.getHashPassword(password)\n    let newUser = await this.userModel.create({\n      name, email,\n      password: hashPassword,\n      age, gender, address, role, company,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n    return newUser;\n  }\n\n  async findAll(currentPage: number, limit: number, queryString: string) {\n    const { filter, sort, population } = aqp(queryString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (currentPage - 1) * (limit);\n    let defaultLimit = limit ? limit : 10;\n\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.userModel.find(filter)\n      .select('-password') // exclude password\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found user';\n    }\n\n    return await this.userModel.findOne({\n      _id: id\n    })\n      .select('-password') // exclude\n      .populate({ path: \"role\", select: { name: 1, _id: 1, } })\n  }\n\n  findOneByUsername(username: string) {\n    return this.userModel.findOne({\n      email: username\n    }).populate({\n      path: \"role\", select: { name: 1 }\n    })\n  }\n\n  isValidPassword(password: string, hash: string) {\n    return compareSync(password, hash);\n  }\n\n  async update(updateUserDto: UpdateUserDto, user: IUser) {\n    return await this.userModel.updateOne(\n      { _id: updateUserDto._id },\n      {\n        ...updateUserDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    // can not delete admin account: admin@gmail.com\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found user'\n    }\n\n    const foundUser = await this.userModel.findById(id);\n    if (foundUser.email === \"admin@gmail.com\") {\n      throw new BadRequestException('Can not delete admin account');\n    }\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return this.userModel.softDelete({ _id: id })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : 9.4.0\n        \n            @nestjs/config : 2.3.1\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : 10.0.3\n        \n            @nestjs/mapped-types : 1.2.2\n        \n            @nestjs/mongoose : 9.2.2\n        \n            @nestjs/passport : 9.0.3\n        \n            @nestjs/platform-express : 9.4.0\n        \n            @nestjs/swagger : ^7.1.12\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.0\n        \n            cookie-parser : 1.4.6\n        \n            ejs : 3.1.9\n        \n            mongoose : 7.1.0\n        \n            ms : 2.1.3\n        \n            passport : 0.6.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : ^1.0.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : https://github.com/ismhac\n        \n            License : UNLICENSED\n        \n            Author : Captain Hắc\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"SUPER_ADMIN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        \"_id\": \"648ab415f4328bd3153ee211\",\n        \"name\": \"Get Company with paginate\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:47:49.369Z\",\n        \"updatedAt\": \"2023-06-15T06:54:05.131Z\",\n        \"__v\": 0,\n        \"updatedBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        }\n    },\n    {\n        \"_id\": \"648ab436f4328bd3153ee216\",\n        \"name\": \"Create Company\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"POST\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:48:22.224Z\",\n        \"updatedAt\": \"2023-06-15T06:48:22.224Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4d5f4328bd3153ee21b\",\n        \"name\": \"Update Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:51:01.241Z\",\n        \"updatedAt\": \"2023-06-15T06:51:01.241Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4ebf4328bd3153ee220\",\n        \"name\": \"Delete Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:51:23.973Z\",\n        \"updatedAt\": \"2023-06-15T06:51:23.973Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab5a8072f2a2ef910638d\",\n        \"name\": \"Get Company by id\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:54:32.799Z\",\n        \"updatedAt\": \"2023-06-15T06:54:32.799Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6d3fa16b294212e4033\",\n        \"name\": \"Create User\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"POST\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:59:31.898Z\",\n        \"updatedAt\": \"2023-06-15T06:59:31.898Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6e7fa16b294212e4038\",\n        \"name\": \"Get User by Id\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:59:51.041Z\",\n        \"updatedAt\": \"2023-06-15T06:59:51.041Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6fdfa16b294212e403d\",\n        \"name\": \"Get User with paginate\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:13.364Z\",\n        \"updatedAt\": \"2023-06-15T07:00:13.364Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab719fa16b294212e4042\",\n        \"name\": \"Update User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:41.934Z\",\n        \"updatedAt\": \"2023-06-15T07:00:41.934Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab728fa16b294212e4047\",\n        \"name\": \"Delete User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:56.274Z\",\n        \"updatedAt\": \"2023-06-15T07:00:56.274Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab750fa16b294212e404c\",\n        \"name\": \"Upload Single File\",\n        \"apiPath\": \"/api/v1/files/upload\",\n        \"method\": \"POST\",\n        \"module\": \"FILES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:01:36.923Z\",\n        \"updatedAt\": \"2023-06-15T07:01:36.923Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad488dafdb9754f40b846\",\n        \"name\": \"Create a Job\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"POST\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:16.508Z\",\n        \"updatedAt\": \"2023-06-15T09:06:16.508Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad499dafdb9754f40b84b\",\n        \"name\": \"Get a job by id\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:33.697Z\",\n        \"updatedAt\": \"2023-06-15T09:06:33.697Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4a6dafdb9754f40b850\",\n        \"name\": \"Update a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:46.085Z\",\n        \"updatedAt\": \"2023-06-15T09:06:46.085Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4ccdafdb9754f40b859\",\n        \"name\": \"Get Job with paginate\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:07:24.175Z\",\n        \"updatedAt\": \"2023-06-15T09:07:24.175Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4d9dafdb9754f40b85e\",\n        \"name\": \"Delete a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:07:37.896Z\",\n        \"updatedAt\": \"2023-06-15T09:07:37.896Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4fedafdb9754f40b863\",\n        \"name\": \"Create a Resume\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:14.659Z\",\n        \"updatedAt\": \"2023-06-15T09:08:14.659Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad511dafdb9754f40b868\",\n        \"name\": \"Fetch resume with paginate\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:33.395Z\",\n        \"updatedAt\": \"2023-06-15T09:08:33.395Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad522dafdb9754f40b86d\",\n        \"name\": \"Get resume by id\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:50.801Z\",\n        \"updatedAt\": \"2023-06-15T09:08:50.801Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad53bdafdb9754f40b872\",\n        \"name\": \"Delete a resume\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:09:15.785Z\",\n        \"updatedAt\": \"2023-06-15T09:09:15.785Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad555dafdb9754f40b877\",\n        \"name\": \"Update resume status\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:09:41.694Z\",\n        \"updatedAt\": \"2023-06-15T09:09:41.694Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad56ddafdb9754f40b87c\",\n        \"name\": \"Fetch resumes by user\",\n        \"apiPath\": \"/api/v1/resumes/by-user\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:10:05.961Z\",\n        \"updatedAt\": \"2023-06-15T09:10:05.961Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad59adafdb9754f40b881\",\n        \"name\": \"Create a permission\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"POST\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:10:50.946Z\",\n        \"updatedAt\": \"2023-06-15T09:10:50.946Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5aedafdb9754f40b886\",\n        \"name\": \"Fetch Permission with paginate\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:10.914Z\",\n        \"updatedAt\": \"2023-06-15T09:11:10.914Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5c5dafdb9754f40b88b\",\n        \"name\": \"Fetch permission by id\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:33.234Z\",\n        \"updatedAt\": \"2023-06-15T09:11:33.234Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5d4dafdb9754f40b890\",\n        \"name\": \"Update a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:48.081Z\",\n        \"updatedAt\": \"2023-06-15T09:11:48.081Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5ebdafdb9754f40b895\",\n        \"name\": \"Delete a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:12:11.323Z\",\n        \"updatedAt\": \"2023-06-15T09:12:11.323Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad613dafdb9754f40b89a\",\n        \"name\": \"Create Role\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"POST\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:12:51.974Z\",\n        \"updatedAt\": \"2023-06-15T09:12:51.974Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad622dafdb9754f40b89f\",\n        \"name\": \"Fetch roles with paginate\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:06.618Z\",\n        \"updatedAt\": \"2023-06-15T09:13:06.618Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad630dafdb9754f40b8a6\",\n        \"name\": \"Fetch role by id\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:20.853Z\",\n        \"updatedAt\": \"2023-06-15T09:13:20.853Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad640dafdb9754f40b8ab\",\n        \"name\": \"Update Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:36.836Z\",\n        \"updatedAt\": \"2023-06-15T09:13:36.836Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad650dafdb9754f40b8b0\",\n        \"name\": \"Delete a Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"captainhac@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:52.798Z\",\n        \"updatedAt\": \"2023-06-15T09:13:52.798Z\",\n        \"__v\": 0\n    }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"NORMAL_USER\"\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>             // @ResponseMessage(\"message\")\n    SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(                       // @User()\n    (data: unknown, ctx: ExecutionContext) => {\n        const request = ctx.switchToHttp().getRequest();\n        return request.user;\n    },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
